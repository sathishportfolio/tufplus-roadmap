[
  {
    "category_id": "extras",
    "category_name": "Beginner Problems",
    "category_rank": 1,
    "category_slug": "beginner-problems",
    "subcategories": [
      {
        "subcategory_id": "fundamentals_basics",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "language-basics",
        "subcategory_name": "Language Basics",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "extras_fundamentals_basics_cppsetup",
            "category_id": "extras",
            "problem_slug": "cpp-setup",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Cpp Setup",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "fundamentals_fundamentals_basics_cpporjava",
            "category_id": "extras",
            "problem_slug": "cpp-basics",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Cpp Basics",
            "problem_rank": 2,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_fundamentals_basics_javasetup",
            "category_id": "extras",
            "problem_slug": "java-setup",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Java Setup",
            "problem_rank": 3,
            "hasIDE": 0
          },
          {
            "problem_id": "fundamentals_fundamentals_basics_java",
            "category_id": "extras",
            "problem_slug": "java-basics",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Java Basics",
            "problem_rank": 4,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_fundamentals_basics_javaoopsbasic",
            "category_id": "extras",
            "problem_slug": "java-oops-basic",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Java OOPs Basic",
            "problem_rank": 5,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_fundamentals_basics_inputoutput",
            "category_id": "extras",
            "problem_slug": "input-output",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Input Output",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_fundamentals_basics_ifelseadultteenproblem",
            "category_id": "extras",
            "problem_slug": "if-else-adult-teen-problem",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "If Else Adult Teen Problem",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_fundamentals_basics_ifelseif",
            "category_id": "extras",
            "problem_slug": "if-elseif",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "If ElseIf",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_fundamentals_basics_switchcase",
            "category_id": "extras",
            "problem_slug": "switch-case",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Switch Case",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_fundamentals_basics_sumoffirstlastelementinarray",
            "category_id": "extras",
            "problem_slug": "sum-of-first-last-element-in-array",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Sum of first last element in array",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_fundamentals_basics_printxnnumbersoftimes",
            "category_id": "extras",
            "problem_slug": "print-x-n-numbers-of-times",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Print X N numbers of times",
            "problem_rank": 11,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_fundamentals_basics_printlastcharacterofstring",
            "category_id": "extras",
            "problem_slug": "print-last-character-of-string",
            "subcategory_slug": "language-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_basics",
            "problem_name": "Print last character of string",
            "problem_rank": 12,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "fundamentals_logicbuilding(patterns)",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "logic-building-patterns",
        "subcategory_name": "Logic Building (Patterns)",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "fundamentals_fundamentals_logicbuilding(patterns)_logicbuildingwithpatterns",
            "category_id": "extras",
            "problem_slug": "easy-and-medium",
            "subcategory_slug": "logic-building-patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_logicbuilding(patterns)",
            "problem_name": "Easy and Medium",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_fundamentals_logicbuilding(patterns)_pattern2",
            "category_id": "extras",
            "problem_slug": "hard",
            "subcategory_slug": "logic-building-patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_logicbuilding(patterns)",
            "problem_name": "Hard",
            "problem_rank": 2,
            "hasIDE": 0
          }
        ]
      },
      {
        "subcategory_id": "extras_patterns",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "patterns",
        "subcategory_name": "Patterns",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "extras_extras_patterns_pattern1",
            "category_id": "extras",
            "problem_slug": "pattern-1",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 1",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern2",
            "category_id": "extras",
            "problem_slug": "pattern-2",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 2",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern3",
            "category_id": "extras",
            "problem_slug": "pattern-3",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 3",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern4",
            "category_id": "extras",
            "problem_slug": "pattern-4",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 4",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern5",
            "category_id": "extras",
            "problem_slug": "pattern-5",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 5",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern6",
            "category_id": "extras",
            "problem_slug": "pattern-6",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 6",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern7",
            "category_id": "extras",
            "problem_slug": "pattern-7",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 7",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern8",
            "category_id": "extras",
            "problem_slug": "pattern-8",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 8",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern9",
            "category_id": "extras",
            "problem_slug": "pattern-9",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 9",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern10",
            "category_id": "extras",
            "problem_slug": "pattern-10",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 10",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern11",
            "category_id": "extras",
            "problem_slug": "pattern-11",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 11",
            "problem_rank": 11,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern12",
            "category_id": "extras",
            "problem_slug": "pattern-12",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 12",
            "problem_rank": 12,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern13",
            "category_id": "extras",
            "problem_slug": "pattern-13",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 13",
            "problem_rank": 13,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern14",
            "category_id": "extras",
            "problem_slug": "pattern-14",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 14",
            "problem_rank": 14,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern15",
            "category_id": "extras",
            "problem_slug": "pattern-15",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 15",
            "problem_rank": 15,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern16",
            "category_id": "extras",
            "problem_slug": "pattern-16",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 16",
            "problem_rank": 16,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern17",
            "category_id": "extras",
            "problem_slug": "pattern-17",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 17",
            "problem_rank": 17,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern18",
            "category_id": "extras",
            "problem_slug": "pattern-18",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 18",
            "problem_rank": 18,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern19",
            "category_id": "extras",
            "problem_slug": "pattern-19",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 19",
            "problem_rank": 19,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern20",
            "category_id": "extras",
            "problem_slug": "pattern-20",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 20",
            "problem_rank": 20,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern21",
            "category_id": "extras",
            "problem_slug": "pattern-21",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 21",
            "problem_rank": 21,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_patterns_pattern22",
            "category_id": "extras",
            "problem_slug": "pattern-22",
            "subcategory_slug": "patterns",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_patterns",
            "problem_name": "Pattern 22",
            "problem_rank": 22,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "fundamentals_timecomplexity",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "time-complexity",
        "subcategory_name": "Time Complexity",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "fundamentals_fundamentals_timecomplexity_theorywithexamples",
            "category_id": "extras",
            "problem_slug": "theory-with-examples",
            "subcategory_slug": "time-complexity",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_timecomplexity",
            "problem_name": "Theory with examples",
            "problem_rank": 1,
            "hasIDE": 0
          }
        ]
      },
      {
        "subcategory_id": "fundamentals_stlandcollections",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "stl-and-collections",
        "subcategory_name": "STL and Collections",
        "subcategory_rank": 5,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "fundamentals_fundamentals_stlandcollections_stl",
            "category_id": "extras",
            "problem_slug": "stl",
            "subcategory_slug": "stl-and-collections",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_stlandcollections",
            "problem_name": "STL",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "fundamentals_fundamentals_stlandcollections_javacollections",
            "category_id": "extras",
            "problem_slug": "java-collections",
            "subcategory_slug": "stl-and-collections",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_stlandcollections",
            "problem_name": "Java Collections",
            "problem_rank": 2,
            "hasIDE": 0
          }
        ]
      },
      {
        "subcategory_id": "fundamentals_conceptbasics",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "concept-basics",
        "subcategory_name": "Concept Basics",
        "subcategory_rank": 6,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "fundamentals_fundamentals_conceptbasics_basicmaths",
            "category_id": "extras",
            "problem_slug": "basic-maths",
            "subcategory_slug": "concept-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_conceptbasics",
            "problem_name": "Basic Maths",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "fundamentals_fundamentals_conceptbasics_basichashing",
            "category_id": "extras",
            "problem_slug": "basic-arrays",
            "subcategory_slug": "concept-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_conceptbasics",
            "problem_name": "Basic Arrays",
            "problem_rank": 2,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_fundamentals_conceptbasics_basichashing",
            "category_id": "extras",
            "problem_slug": "basic-hashing",
            "subcategory_slug": "concept-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_conceptbasics",
            "problem_name": "Basic Hashing",
            "problem_rank": 3,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_fundamentals_conceptbasics_basicstring",
            "category_id": "extras",
            "problem_slug": "basic-string",
            "subcategory_slug": "concept-basics",
            "category_slug": "beginner-problems",
            "subcategory_id": "fundamentals_conceptbasics",
            "problem_name": "Basic String",
            "problem_rank": 4,
            "hasIDE": 0
          }
        ]
      },
      {
        "subcategory_id": "extras_basicmaths",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "basic-maths",
        "subcategory_name": "Basic Maths",
        "subcategory_rank": 7,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "extras_extras_basicmaths_countalldigitsofanumber",
            "category_id": "extras",
            "problem_slug": "count-all-digits-of-a-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Count all digits of a number",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_countnumberofodddigitsinanumber",
            "category_id": "extras",
            "problem_slug": "count-number-of-odd-digits-in-a-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Count number of odd digits in a number",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_reverseanumber",
            "category_id": "extras",
            "problem_slug": "reverse-a-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Reverse a number",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_palindromenumber",
            "category_id": "extras",
            "problem_slug": "palindrome-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Palindrome number",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_returnthelargestdigitinanumber",
            "category_id": "extras",
            "problem_slug": "return-the-largest-digit-in-a-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Return the largest digit in a number",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_factorialofagivennumber",
            "category_id": "extras",
            "problem_slug": "factorial-of-a-given-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Factorial of a given number",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_checkifthenumberifarmstrong",
            "category_id": "extras",
            "problem_slug": "check-if-the-number-if-armstrong",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Check if the number is armstrong",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_checkforperfectnumber",
            "category_id": "extras",
            "problem_slug": "check-for-perfect-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Check for perfect number",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_checkforprimenumber",
            "category_id": "extras",
            "problem_slug": "check-for-prime-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Check for prime number",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_countofprimenumberstilln",
            "category_id": "extras",
            "problem_slug": "count-of-prime-numbers-till-n",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Count of prime numbers till N",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_gcdoftwonumbers",
            "category_id": "extras",
            "problem_slug": "gcd-of-two-numbers",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "GCD of two numbers",
            "problem_rank": 11,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_lcmoftwonumbers",
            "category_id": "extras",
            "problem_slug": "lcm-of-two-numbers",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "LCM of two numbers",
            "problem_rank": 12,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicmaths_divisorsofanumber",
            "category_id": "extras",
            "problem_slug": "divisors-of-a-number",
            "subcategory_slug": "basic-maths",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicmaths",
            "problem_name": "Divisors of a number",
            "problem_rank": 13,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "extras_basicarrays",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "basic-arrays",
        "subcategory_name": "Basic Arrays",
        "subcategory_rank": 8,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "extras_extras_basicarrays_sumofarrayelements",
            "category_id": "extras",
            "problem_slug": "sum-of-array-elements",
            "subcategory_slug": "basic-arrays",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicarrays",
            "problem_name": "Sum of array elements",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicarrays_countofoddnumbersinarray",
            "category_id": "extras",
            "problem_slug": "count-of-odd-numbers-in-array",
            "subcategory_slug": "basic-arrays",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicarrays",
            "problem_name": "Count of odd numbers in array",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicarrays_reverseanarray",
            "category_id": "extras",
            "problem_slug": "reverse-an-array",
            "subcategory_slug": "basic-arrays",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicarrays",
            "problem_name": "Reverse an array",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicarrays_checkifthearrayissorted",
            "category_id": "extras",
            "problem_slug": "check-if-the-array-is-sorted",
            "subcategory_slug": "basic-arrays",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicarrays",
            "problem_name": "Check if the array is sorted",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "extras_basichashing",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "basic-hashing",
        "subcategory_name": "Basic Hashing",
        "subcategory_rank": 9,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "extras_extras_basichashing_highestoccurringelementinanarray",
            "category_id": "extras",
            "problem_slug": "highest-occurring-element-in-an-array",
            "subcategory_slug": "basic-hashing",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basichashing",
            "problem_name": "Highest occurring element in an array",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basichashing_secondhighestoccurringelement",
            "category_id": "extras",
            "problem_slug": "second-highest-occurring-element",
            "subcategory_slug": "basic-hashing",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basichashing",
            "problem_name": "Second highest occurring element",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basichashing_sumofhighestandlowestfrequency",
            "category_id": "extras",
            "problem_slug": "sum-of-highest-and-lowest-frequency",
            "subcategory_slug": "basic-hashing",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basichashing",
            "problem_name": "Sum of highest and lowest frequency",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "extras_basicstrings",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "basic-strings",
        "subcategory_name": "Basic Strings",
        "subcategory_rank": 10,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "extras_extras_basicstrings_reverseastring",
            "category_id": "extras",
            "problem_slug": "reverse-a-string",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Reverse a string",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstrings_palindromecheck",
            "category_id": "extras",
            "problem_slug": "palindrome-check",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Palindrome Check",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstrings_largestoddnumberinastring",
            "category_id": "extras",
            "problem_slug": "largest-odd-number-in-a-string",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Largest odd number in a string",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstrings_longestcommonprefix",
            "category_id": "extras",
            "problem_slug": "longest-common-prefix",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Longest common prefix",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstrings_isomorphicstring",
            "category_id": "extras",
            "problem_slug": "isomorphic-string",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Isomorphic string",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstrings_rotatestring",
            "category_id": "extras",
            "problem_slug": "rotate-string",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Rotate string",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstrings_validanagram",
            "category_id": "extras",
            "problem_slug": "valid-anagram",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Valid Anagram",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstrings_sortcharactersbyfrequency",
            "category_id": "extras",
            "problem_slug": "sort-characters-by-frequency",
            "subcategory_slug": "basic-strings",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicstrings",
            "problem_name": "Sort characters by frequency",
            "problem_rank": 8,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "extras_basicrecursion",
        "category_name": "Beginner Problems",
        "category_id": "extras",
        "subcategory_slug": "basic-recursion",
        "subcategory_name": "Basic Recursion",
        "subcategory_rank": 11,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "extras_extras_basicrecursion_recursiontheory",
            "category_id": "extras",
            "problem_slug": "recursion-theory",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Recursion Theory",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_extras_basicrecursion_recursionconceptswithparameters",
            "category_id": "extras",
            "problem_slug": "recursion-concepts-with-parameters",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Recursion Concepts with Parameters",
            "problem_rank": 2,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_extras_basicrecursion_factorialofagivennumber",
            "category_id": "extras",
            "problem_slug": "factorial-of-a-given-number",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Factorial of a given number",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_sumoffirstnnumbers",
            "category_id": "extras",
            "problem_slug": "sum-of-first-n-numbers",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Sum of first N numbers",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_sumofarrayelements",
            "category_id": "extras",
            "problem_slug": "sum-of-array-elements",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Sum of array elements",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_reverseastring",
            "category_id": "extras",
            "problem_slug": "reverse-a-string",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Reverse a string",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_checkifstringispalindromeornot",
            "category_id": "extras",
            "problem_slug": "check-if-string-is-palindrome-or-not-",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Check if string is palindrome or not ",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_checkifanumberisprimeornot",
            "category_id": "extras",
            "problem_slug": "check-if-a-number-is-prime-or-not",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Check if a number is prime or not",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_reverseanarray",
            "category_id": "extras",
            "problem_slug": "reverse-an-array",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Reverse an array",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_checkifthearrayissorted",
            "category_id": "extras",
            "problem_slug": "check-if-the-array-is-sorted",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Check if the array is sorted",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_sumofdigitsinagivennumber",
            "category_id": "extras",
            "problem_slug": "sum-of-digits-in-a-given-number",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Sum of digits in a given number",
            "problem_rank": 11,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicrecursion_fibonaccinumber",
            "category_id": "extras",
            "problem_slug": "fibonacci-number",
            "subcategory_slug": "basic-recursion",
            "category_slug": "beginner-problems",
            "subcategory_id": "extras_basicrecursion",
            "problem_name": "Fibonacci Number",
            "problem_rank": 12,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "sorting",
    "category_name": "Sorting ",
    "category_rank": 2,
    "category_slug": "sorting",
    "subcategories": [
      {
        "subcategory_id": "sorting_algorithms",
        "category_name": "Sorting ",
        "category_id": "sorting",
        "subcategory_slug": "algorithms",
        "subcategory_name": "Algorithms",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "sorting_sorting_algorithms_selectionsort",
            "category_id": "sorting",
            "problem_slug": "selection-sort",
            "subcategory_slug": "algorithms",
            "category_slug": "sorting",
            "subcategory_id": "sorting_algorithms",
            "problem_name": "Selection Sort",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "sorting_sorting_algorithms_bubblesort",
            "category_id": "sorting",
            "problem_slug": "bubble-sort",
            "subcategory_slug": "algorithms",
            "category_slug": "sorting",
            "subcategory_id": "sorting_algorithms",
            "problem_name": "Bubble Sort",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "sorting_sorting_algorithms_insertionsorting",
            "category_id": "sorting",
            "problem_slug": "insertion-sorting",
            "subcategory_slug": "algorithms",
            "category_slug": "sorting",
            "subcategory_id": "sorting_algorithms",
            "problem_name": "Insertion Sorting",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "sorting_sorting_algorithms_mergesorting",
            "category_id": "sorting",
            "problem_slug": "merge-sorting",
            "subcategory_slug": "algorithms",
            "category_slug": "sorting",
            "subcategory_id": "sorting_algorithms",
            "problem_name": "Merge Sorting",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "sorting_sorting_algorithms_quicksorting",
            "category_id": "sorting",
            "problem_slug": "quick-sorting",
            "subcategory_slug": "algorithms",
            "category_slug": "sorting",
            "subcategory_id": "sorting_algorithms",
            "problem_name": "Quick Sorting",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "arrays",
    "category_name": "Arrays",
    "category_rank": 3,
    "category_slug": "arrays",
    "subcategories": [
      {
        "subcategory_id": "arrays_fundamentals",
        "category_name": "Arrays",
        "category_id": "arrays",
        "subcategory_slug": "fundamentals",
        "subcategory_name": "Fundamentals",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "arrays_arrays_fundamentals_linearsearch",
            "category_id": "arrays",
            "problem_slug": "linear-search",
            "subcategory_slug": "fundamentals",
            "category_slug": "arrays",
            "subcategory_id": "arrays_fundamentals",
            "problem_name": "Linear Search",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_fundamentals_largestelement",
            "category_id": "arrays",
            "problem_slug": "largest-element",
            "subcategory_slug": "fundamentals",
            "category_slug": "arrays",
            "subcategory_id": "arrays_fundamentals",
            "problem_name": "Largest Element ",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_fundamentals_secondlargestelement",
            "category_id": "arrays",
            "problem_slug": "second-largest-element",
            "subcategory_slug": "fundamentals",
            "category_slug": "arrays",
            "subcategory_id": "arrays_fundamentals",
            "problem_name": "Second Largest Element",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_fundamentals_maximumconsecutiveones",
            "category_id": "arrays",
            "problem_slug": "maximum-consecutive-ones",
            "subcategory_slug": "fundamentals",
            "category_slug": "arrays",
            "subcategory_id": "arrays_fundamentals",
            "problem_name": "Maximum Consecutive Ones",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_fundamentals_leftrotatearraybyone",
            "category_id": "arrays",
            "problem_slug": "left-rotate-array-by-one",
            "subcategory_slug": "fundamentals",
            "category_slug": "arrays",
            "subcategory_id": "arrays_fundamentals",
            "problem_name": "Left Rotate Array by One",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_fundamentals_leftrotatearray",
            "category_id": "arrays",
            "problem_slug": "left-rotate-array",
            "subcategory_slug": "fundamentals",
            "category_slug": "arrays",
            "subcategory_id": "arrays_fundamentals",
            "problem_name": "Left Rotate Array by K Places",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "arrays_logicbuilding",
        "category_name": "Arrays",
        "category_id": "arrays",
        "subcategory_slug": "logic-building",
        "subcategory_name": "Logic Building",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "arrays_arrays_logicbuilding_movezerostoend",
            "category_id": "arrays",
            "problem_slug": "move-zeros-to-end",
            "subcategory_slug": "logic-building",
            "category_slug": "arrays",
            "subcategory_id": "arrays_logicbuilding",
            "problem_name": "Move Zeros to End",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_logicbuilding_removeduplicatesfromsortedarray",
            "category_id": "arrays",
            "problem_slug": "remove-duplicates-from-sorted-array",
            "subcategory_slug": "logic-building",
            "category_slug": "arrays",
            "subcategory_id": "arrays_logicbuilding",
            "problem_name": "Remove duplicates from sorted array",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_logicbuilding_findmissingnumber",
            "category_id": "arrays",
            "problem_slug": "find-missing-number",
            "subcategory_slug": "logic-building",
            "category_slug": "arrays",
            "subcategory_id": "arrays_logicbuilding",
            "problem_name": "Find missing number",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_logicbuilding_unionoftwosortedarrays",
            "category_id": "arrays",
            "problem_slug": "union-of-two-sorted-arrays",
            "subcategory_slug": "logic-building",
            "category_slug": "arrays",
            "subcategory_id": "arrays_logicbuilding",
            "problem_name": "Union of two sorted arrays",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_logicbuilding_intersectionoftwosortedarrays",
            "category_id": "arrays",
            "problem_slug": "intersection-of-two-sorted-arrays",
            "subcategory_slug": "logic-building",
            "category_slug": "arrays",
            "subcategory_id": "arrays_logicbuilding",
            "problem_name": "Intersection of two sorted arrays",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "arrays_faqs(medium)",
        "category_name": "Arrays",
        "category_id": "arrays",
        "subcategory_slug": "faqs-medium",
        "subcategory_name": "FAQs(Medium)",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "arrays_arrays_faqs(medium)_leadersinanarray",
            "category_id": "arrays",
            "problem_slug": "leaders-in-an-array",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Leaders in an Array",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_printthematrixinspiralmanner",
            "category_id": "arrays",
            "problem_slug": "print-the-matrix-in-spiral-manner",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Print the matrix in spiral manner",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_rearrangearrayelementsbysign",
            "category_id": "arrays",
            "problem_slug": "rearrange-array-elements-by-sign",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Rearrange array elements by sign",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_pascal'striangle",
            "category_id": "arrays",
            "problem_slug": "pascal's-triangle",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Pascal's Triangle",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_rotatematrixby90degrees",
            "category_id": "arrays",
            "problem_slug": "rotate-matrix-by-90-degrees",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Rotate matrix by 90 degrees",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_twosum",
            "category_id": "arrays",
            "problem_slug": "two-sum",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Two Sum",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_3sum",
            "category_id": "arrays",
            "problem_slug": "3-sum",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "3 Sum",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_4sum",
            "category_id": "arrays",
            "problem_slug": "4-sum",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "4 Sum",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_sortanarrayof0's1'sand2's",
            "category_id": "arrays",
            "problem_slug": "sort-an-array-of-0's-1's-and-2's",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Sort an array of 0's 1's and 2's",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(medium)_kadane'salgorithm",
            "category_id": "arrays",
            "problem_slug": "kadane's-algorithm",
            "subcategory_slug": "faqs-medium",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(medium)",
            "problem_name": "Kadane's Algorithm",
            "problem_rank": 10,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "arrays_faqs(hard)",
        "category_name": "Arrays",
        "category_id": "arrays",
        "subcategory_slug": "faqs-hard",
        "subcategory_name": "FAQs(Hard)",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "arrays_arrays_faqs(hard)_majorityelement-i",
            "category_id": "arrays",
            "problem_slug": "majority-element-i",
            "subcategory_slug": "faqs-hard",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(hard)",
            "problem_name": "Majority Element-I",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(hard)_majorityelement-ii",
            "category_id": "arrays",
            "problem_slug": "majority-element-ii",
            "subcategory_slug": "faqs-hard",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(hard)",
            "problem_name": "Majority Element-II",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(hard)_findtherepeatingandmissingnumber",
            "category_id": "arrays",
            "problem_slug": "find-the-repeating-and-missing-number",
            "subcategory_slug": "faqs-hard",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(hard)",
            "problem_name": "Find the repeating and missing number",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(hard)_countinversions",
            "category_id": "arrays",
            "problem_slug": "count-inversions",
            "subcategory_slug": "faqs-hard",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(hard)",
            "problem_name": "Count Inversions",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(hard)_reversepairs",
            "category_id": "arrays",
            "problem_slug": "reverse-pairs",
            "subcategory_slug": "faqs-hard",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(hard)",
            "problem_name": "Reverse Pairs",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(hard)_maximumproductsubarrayinanarray",
            "category_id": "arrays",
            "problem_slug": "maximum-product-subarray-in-an-array",
            "subcategory_slug": "faqs-hard",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(hard)",
            "problem_name": "Maximum Product Subarray in an Array",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "arrays_arrays_faqs(hard)_mergetwosortedarrayswithoutextraspace",
            "category_id": "arrays",
            "problem_slug": "merge-two-sorted-arrays-without-extra-space",
            "subcategory_slug": "faqs-hard",
            "category_slug": "arrays",
            "subcategory_id": "arrays_faqs(hard)",
            "problem_name": "Merge two sorted arrays without extra space",
            "problem_rank": 7,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "arrays_contest",
        "category_name": "Arrays",
        "category_id": "arrays",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 5,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "hashing",
    "category_name": "Hashing",
    "category_rank": 4,
    "category_slug": "hashing",
    "subcategories": [
      {
        "subcategory_id": "hashing_faqs",
        "category_name": "Hashing",
        "category_id": "hashing",
        "subcategory_slug": "faqs",
        "subcategory_name": "FAQs",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "hashing_hashing_faqs_longestconsecutivesequenceinanarray-dup",
            "category_id": "hashing",
            "problem_slug": "longest-consecutive-sequence-in-an-array",
            "subcategory_slug": "faqs",
            "category_slug": "hashing",
            "subcategory_id": "hashing_faqs",
            "problem_name": "Longest Consecutive Sequence in an Array",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "hashing_hashing_faqs_longestsubarraywithsumk-dup",
            "category_id": "hashing",
            "problem_slug": "longest-subarray-with-sum-k",
            "subcategory_slug": "faqs",
            "category_slug": "hashing",
            "subcategory_id": "hashing_faqs",
            "problem_name": "Longest subarray with sum K",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "hashing_hashing_faqs_countsubarrayswithgivensum-dup",
            "category_id": "hashing",
            "problem_slug": "count-subarrays-with-given-sum",
            "subcategory_slug": "faqs",
            "category_slug": "hashing",
            "subcategory_id": "hashing_faqs",
            "problem_name": "Count subarrays with given sum",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "hashing_hashing_faqs_countsubarrayswithgivenxork-dup",
            "category_id": "hashing",
            "problem_slug": "count-subarrays-with-given-xor-k",
            "subcategory_slug": "faqs",
            "category_slug": "hashing",
            "subcategory_id": "hashing_faqs",
            "problem_name": "Count subarrays with given xor K",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "hashing_contest",
        "category_name": "Hashing",
        "category_id": "hashing",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 2,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "binarysearch",
    "category_name": "Binary Search",
    "category_rank": 5,
    "category_slug": "binary-search",
    "subcategories": [
      {
        "subcategory_id": "binarysearch_fundamentals",
        "category_name": "Binary Search",
        "category_id": "binarysearch",
        "subcategory_slug": "fundamentals",
        "subcategory_name": "Fundamentals",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearch_binarysearch_fundamentals_searchxinsortedarray",
            "category_id": "binarysearch",
            "problem_slug": "search-x-in-sorted-array",
            "subcategory_slug": "fundamentals",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_fundamentals",
            "problem_name": "Search X in sorted array",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_fundamentals_lowerbound",
            "category_id": "binarysearch",
            "problem_slug": "lower-bound-",
            "subcategory_slug": "fundamentals",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_fundamentals",
            "problem_name": "Lower Bound ",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_fundamentals_upperbound",
            "category_id": "binarysearch",
            "problem_slug": "upper-bound",
            "subcategory_slug": "fundamentals",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_fundamentals",
            "problem_name": "Upper Bound",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearch_logicbuilding",
        "category_name": "Binary Search",
        "category_id": "binarysearch",
        "subcategory_slug": "logic-building",
        "subcategory_name": "Logic Building",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_searchinsertposition",
            "category_id": "binarysearch",
            "problem_slug": "search-insert-position",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "Search insert position",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_floorandceilinsortedarray",
            "category_id": "binarysearch",
            "problem_slug": "floor-and-ceil-in-sorted-array",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "Floor and Ceil in Sorted Array",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_firstandlastoccurrence",
            "category_id": "binarysearch",
            "problem_slug": "first-and-last-occurrence",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "First and last occurrence",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_searchinrotatedsortedarray-i",
            "category_id": "binarysearch",
            "problem_slug": "search-in-rotated-sorted-array-i",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "Search in rotated sorted array-I",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_searchinrotatedsortedarray-ii",
            "category_id": "binarysearch",
            "problem_slug": "search-in-rotated-sorted-array-ii",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "Search in rotated sorted array-II",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_findminimuminrotatedsortedarray",
            "category_id": "binarysearch",
            "problem_slug": "find-minimum-in-rotated-sorted-array",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "Find minimum in Rotated Sorted Array",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_findouthowmanytimesthearrayisrotated",
            "category_id": "binarysearch",
            "problem_slug": "find-out-how-many-times-the-array-is-rotated",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "Find out how many times the array is rotated",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_logicbuilding_singleelementinsortedarray",
            "category_id": "binarysearch",
            "problem_slug": "single-element-in-sorted-array",
            "subcategory_slug": "logic-building",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_logicbuilding",
            "problem_name": "Single element in sorted array",
            "problem_rank": 8,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearch_onanswers",
        "category_name": "Binary Search",
        "category_id": "binarysearch",
        "subcategory_slug": "on-answers",
        "subcategory_name": "On answers",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearch_binarysearch_onanswers_findsquarerootofanumber",
            "category_id": "binarysearch",
            "problem_slug": "find-square-root-of-a-number",
            "subcategory_slug": "on-answers",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_onanswers",
            "problem_name": "Find square root of a number",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_onanswers_findnthrootofanumber",
            "category_id": "binarysearch",
            "problem_slug": "find-nth-root-of-a-number",
            "subcategory_slug": "on-answers",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_onanswers",
            "problem_name": "Find Nth root of a number",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_onanswers_findthesmallestdivisor",
            "category_id": "binarysearch",
            "problem_slug": "find-the-smallest-divisor",
            "subcategory_slug": "on-answers",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_onanswers",
            "problem_name": "Find the smallest divisor",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_onanswers_kokoeatingbananas",
            "category_id": "binarysearch",
            "problem_slug": "koko-eating-bananas",
            "subcategory_slug": "on-answers",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_onanswers",
            "problem_name": "Koko eating bananas",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_onanswers_minimumdaystomakembouquets",
            "category_id": "binarysearch",
            "problem_slug": "minimum-days-to-make-m-bouquets",
            "subcategory_slug": "on-answers",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_onanswers",
            "problem_name": "Minimum days to make M bouquets",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearch_faqs",
        "category_name": "Binary Search",
        "category_id": "binarysearch",
        "subcategory_slug": "faqs",
        "subcategory_name": "FAQs",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearch_binarysearch_faqs_aggressivecows",
            "category_id": "binarysearch",
            "problem_slug": "aggressive-cows",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_faqs",
            "problem_name": "Aggressive Cows",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_faqs_bookallocationproblem",
            "category_id": "binarysearch",
            "problem_slug": "book-allocation-problem",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_faqs",
            "problem_name": "Book Allocation Problem",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_faqs_findpeakelement",
            "category_id": "binarysearch",
            "problem_slug": "find-peak-element",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_faqs",
            "problem_name": "Find peak element",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_faqs_kthelementof2sortedarrays",
            "category_id": "binarysearch",
            "problem_slug": "kth-element-of-2-sorted-arrays",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_faqs",
            "problem_name": "Kth element of 2 sorted arrays",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_faqs_minimisemaxdistancetogasstations",
            "category_id": "binarysearch",
            "problem_slug": "minimise-max-distance-to-gas-stations",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_faqs",
            "problem_name": "Minimise max distance to gas stations",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_faqs_medianof2sortedarrays",
            "category_id": "binarysearch",
            "problem_slug": "median-of-2-sorted-arrays",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_faqs",
            "problem_name": "Median of 2 sorted arrays",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_faqs_splitarray-largestsum",
            "category_id": "binarysearch",
            "problem_slug": "split-array---largest-sum",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_faqs",
            "problem_name": "Split array - largest sum",
            "problem_rank": 123,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearch_2darrays",
        "category_name": "Binary Search",
        "category_id": "binarysearch",
        "subcategory_slug": "2d-arrays",
        "subcategory_name": "2D Arrays",
        "subcategory_rank": 5,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearch_binarysearch_2darrays_findrowwithmaximum1's",
            "category_id": "binarysearch",
            "problem_slug": "find-row-with-maximum-1's",
            "subcategory_slug": "2d-arrays",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_2darrays",
            "problem_name": "Find row with maximum 1's",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_2darrays_searchina2dmatrix",
            "category_id": "binarysearch",
            "problem_slug": "search-in-a-2d-matrix",
            "subcategory_slug": "2d-arrays",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_2darrays",
            "problem_name": "Search in a 2D matrix",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_2darrays_searchin2dmatrix-ii",
            "category_id": "binarysearch",
            "problem_slug": "search-in-2d-matrix-ii",
            "subcategory_slug": "2d-arrays",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_2darrays",
            "problem_name": "Search in 2D matrix - II",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_2darrays_findpeakelement-dup",
            "category_id": "binarysearch",
            "problem_slug": "find-peak-element",
            "subcategory_slug": "2d-arrays",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_2darrays",
            "problem_name": "Find Peak Element",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearch_binarysearch_2darrays_matrixmedian",
            "category_id": "binarysearch",
            "problem_slug": "matrix-median",
            "subcategory_slug": "2d-arrays",
            "category_slug": "binary-search",
            "subcategory_id": "binarysearch_2darrays",
            "problem_name": "Matrix Median",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearch_contest",
        "category_name": "Binary Search",
        "category_id": "binarysearch",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 6,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "recursion",
    "category_name": "Recursion",
    "category_rank": 6,
    "category_slug": "recursion",
    "subcategories": [
      {
        "subcategory_id": "recursion_implementation",
        "category_name": "Recursion",
        "category_id": "recursion",
        "subcategory_slug": "implementation-problems",
        "subcategory_name": "Implementation Problems",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "recursion_recursion_implementation_pow(x,n)",
            "category_id": "recursion",
            "problem_slug": "pow(x,n)",
            "subcategory_slug": "implementation-problems",
            "category_slug": "recursion",
            "subcategory_id": "recursion_implementation",
            "problem_name": "Pow(x,n)",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_implementation_generateparanthesis",
            "category_id": "recursion",
            "problem_slug": "generate-paranthesis",
            "subcategory_slug": "implementation-problems",
            "category_slug": "recursion",
            "subcategory_id": "recursion_implementation",
            "problem_name": "Generate Paranthesis",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_implementation_powerset",
            "category_id": "recursion",
            "problem_slug": "power-set",
            "subcategory_slug": "implementation-problems",
            "category_slug": "recursion",
            "subcategory_id": "recursion_implementation",
            "problem_name": "Power Set",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "recursion_subsequencepatternproblems",
        "category_name": "Recursion",
        "category_id": "recursion",
        "subcategory_slug": "subsequence-pattern-problems",
        "subcategory_name": "Subsequence Pattern Problems",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "recursion_recursion_subsequencepatternproblems_checkifthereexistsasubsequencewithsumk",
            "category_id": "recursion",
            "problem_slug": "check-if-there-exists-a-subsequence-with-sum-k",
            "subcategory_slug": "subsequence-pattern-problems",
            "category_slug": "recursion",
            "subcategory_id": "recursion_subsequencepatternproblems",
            "problem_name": "Check if there exists a subsequence with sum K",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_subsequencepatternproblems_countallsubsequenceswithsumk",
            "category_id": "recursion",
            "problem_slug": "count-all-subsequences-with-sum-k",
            "subcategory_slug": "subsequence-pattern-problems",
            "category_slug": "recursion",
            "subcategory_id": "recursion_subsequencepatternproblems",
            "problem_name": "Count all subsequences with sum K",
            "problem_rank": 2,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "recursion_faqs",
        "category_name": "Recursion",
        "category_id": "recursion",
        "subcategory_slug": "faqs-medium",
        "subcategory_name": "FAQs (Medium)",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "recursion_recursion_faqs_combinationsum",
            "category_id": "recursion",
            "problem_slug": "combination-sum",
            "subcategory_slug": "faqs-medium",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs",
            "problem_name": "Combination Sum",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs_combinationsumii",
            "category_id": "recursion",
            "problem_slug": "combination-sum-ii",
            "subcategory_slug": "faqs-medium",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs",
            "problem_name": "Combination Sum II",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs_subsetsi",
            "category_id": "recursion",
            "problem_slug": "subsets-i",
            "subcategory_slug": "faqs-medium",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs",
            "problem_name": "Subsets I",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs_subsetsii",
            "category_id": "recursion",
            "problem_slug": "subsets-ii",
            "subcategory_slug": "faqs-medium",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs",
            "problem_name": "Subsets II",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs_combinationsumiii",
            "category_id": "recursion",
            "problem_slug": "combination-sum-iii",
            "subcategory_slug": "faqs-medium",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs",
            "problem_name": "Combination Sum III",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "recursion_hard",
        "category_name": "Recursion",
        "category_id": "recursion",
        "subcategory_slug": "hard",
        "subcategory_name": "Hard",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "recursion_recursion_hard_lettercombinationsofaphonenumber",
            "category_id": "recursion",
            "problem_slug": "letter-combinations-of-a-phone-number",
            "subcategory_slug": "hard",
            "category_slug": "recursion",
            "subcategory_id": "recursion_hard",
            "problem_name": "Letter Combinations of a Phone Number",
            "problem_rank": 1,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "recursion_faqs(hard)",
        "category_name": "Recursion",
        "category_id": "recursion",
        "subcategory_slug": "faqs-hard",
        "subcategory_name": "FAQs (Hard)",
        "subcategory_rank": 5,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "recursion_recursion_faqs(hard)_palindromepartitioning",
            "category_id": "recursion",
            "problem_slug": "palindrome-partitioning",
            "subcategory_slug": "faqs-hard",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs(hard)",
            "problem_name": "Palindrome partitioning",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs(hard)_wordsearch",
            "category_id": "recursion",
            "problem_slug": "word-search",
            "subcategory_slug": "faqs-hard",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs(hard)",
            "problem_name": "Word Search",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs(hard)_nqueen",
            "category_id": "recursion",
            "problem_slug": "n-queen",
            "subcategory_slug": "faqs-hard",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs(hard)",
            "problem_name": "N Queen",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs(hard)_ratinamaze",
            "category_id": "recursion",
            "problem_slug": "rat-in-a-maze",
            "subcategory_slug": "faqs-hard",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs(hard)",
            "problem_name": "Rat in a Maze",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs(hard)_mcoloringproblem",
            "category_id": "recursion",
            "problem_slug": "m-coloring-problem",
            "subcategory_slug": "faqs-hard",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs(hard)",
            "problem_name": "M Coloring Problem",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "recursion_recursion_faqs(hard)_sudokosolver",
            "category_id": "recursion",
            "problem_slug": "sudoko-solver",
            "subcategory_slug": "faqs-hard",
            "category_slug": "recursion",
            "subcategory_id": "recursion_faqs(hard)",
            "problem_name": "Sudoko Solver",
            "problem_rank": 7,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "recursion_contest",
        "category_name": "Recursion",
        "category_id": "recursion",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 6,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "linked-list",
    "category_name": "Linked-List",
    "category_rank": 7,
    "category_slug": "linked-list",
    "subcategories": [
      {
        "subcategory_id": "linked-list_fundamentals(singlell)",
        "category_name": "Linked-List",
        "category_id": "linked-list",
        "subcategory_slug": "fundamentals-single-ll",
        "subcategory_name": "Fundamentals (Single LL)",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "linked-list_linked-list_fundamentals(singlell)_introductiontosinglylinkedlist",
            "category_id": "linked-list",
            "problem_slug": "introduction-to-singly-linkedlist",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Introduction to Singly LinkedList",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "linked-list_linked-list_fundamentals(singlell)_traversalinlinkedlist",
            "category_id": "linked-list",
            "problem_slug": "traversal-in-linked-list",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Traversal in Linked List",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_fundamentals(singlell)_deletioninlinkedlist",
            "category_id": "linked-list",
            "problem_slug": "deletion-in-linked-list",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Deletion in Linked List",
            "problem_rank": 3,
            "hasIDE": 0
          },
          {
            "problem_id": "linked-list_linked-list_fundamentals(singlell)_insertioninlinkedlist",
            "category_id": "linked-list",
            "problem_slug": "insertion-in-linked-list",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Insertion in Linked List",
            "problem_rank": 4,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_deletionoftheheadofll",
            "category_id": "linked-list",
            "problem_slug": "deletion-of-the-head-of-ll",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Deletion of the head of LL",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_deletionofthetailofll",
            "category_id": "linked-list",
            "problem_slug": "deletion-of-the-tail-of-ll",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Deletion of the tail of LL",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_deletionofthekthelementofll",
            "category_id": "linked-list",
            "problem_slug": "deletion-of-the-kth-element-of-ll",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Deletion of the Kth element of LL",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_deletetheelementwithvaluex",
            "category_id": "linked-list",
            "problem_slug": "delete-the-element-with-value-x",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Delete the element with value X",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertionattheheadofll",
            "category_id": "linked-list",
            "problem_slug": "insertion-at-the-head-of-ll",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Insertion at the head of LL",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertionatthetailofll",
            "category_id": "linked-list",
            "problem_slug": "insertion-at-the-tail-of-ll",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Insertion at the tail of LL",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertionatthekthposition",
            "category_id": "linked-list",
            "problem_slug": "insertion-at-the-kth-position-of-ll",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Insertion at the Kth position of LL",
            "problem_rank": 11,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertionbeforethevaluex",
            "category_id": "linked-list",
            "problem_slug": "insertion-before-the-value-x-in-ll",
            "subcategory_slug": "fundamentals-single-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(singlell)",
            "problem_name": "Insertion before the value X in LL",
            "problem_rank": 12,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "linked-list_fundamentals(doublyll)",
        "category_name": "Linked-List",
        "category_id": "linked-list",
        "subcategory_slug": "fundamentals-doubly-ll",
        "subcategory_name": "Fundamentals (Doubly LL)",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "linked-list_linked-list_fundamentals(doublyll)_introductiontodoublyll",
            "category_id": "linked-list",
            "problem_slug": "introduction-to-doubly-ll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Introduction to Doubly LL",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "linked-list_linked-list_fundamentals(doublyll)_deletionindoublyll",
            "category_id": "linked-list",
            "problem_slug": "deletion-in-doubly-ll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Deletion in Doubly LL",
            "problem_rank": 2,
            "hasIDE": 0
          },
          {
            "problem_id": "linked-list_linked-list_fundamentals(doublyll)_insertionindll",
            "category_id": "linked-list",
            "problem_slug": "insertion-in-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Insertion in DLL",
            "problem_rank": 3,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_convertarraytodll",
            "category_id": "linked-list",
            "problem_slug": "convert-array-to-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Convert Array to DLL",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_deleteheadofdll",
            "category_id": "linked-list",
            "problem_slug": "delete-head-of-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Delete head of DLL",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_deletetailofdll",
            "category_id": "linked-list",
            "problem_slug": "delete-tail-of-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Delete Tail of DLL",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_deletekthelementofdll",
            "category_id": "linked-list",
            "problem_slug": "delete-kth-element-of-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Delete Kth Element of DLL",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_removinggivennodeindll",
            "category_id": "linked-list",
            "problem_slug": "removing-given-node-in-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Removing given node in DLL",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertnodebeforeheadindll",
            "category_id": "linked-list",
            "problem_slug": "insert-node-before-head-in-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Insert node before head in DLL",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertnodebeforetailindll",
            "category_id": "linked-list",
            "problem_slug": "insert-node-before-tail-in-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Insert node before tail in DLL",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertnodebefore(kthnode)indll",
            "category_id": "linked-list",
            "problem_slug": "insert-node-before-kth-node-in-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Insert node before (kth node) in DLL",
            "problem_rank": 11,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basiclinkedlist_insertbeforegivennodeindll",
            "category_id": "linked-list",
            "problem_slug": "insert-before-given-node-in-dll",
            "subcategory_slug": "fundamentals-doubly-ll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_fundamentals(doublyll)",
            "problem_name": "Insert before given node in DLL",
            "problem_rank": 12,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "linked-list_logicbuilding",
        "category_name": "Linked-List",
        "category_id": "linked-list",
        "subcategory_slug": "logic-building",
        "subcategory_name": "Logic Building",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "linked-list_linked-list_logicbuilding_addtwonumbersinll",
            "category_id": "linked-list",
            "problem_slug": "add-two-numbers-in-ll",
            "subcategory_slug": "logic-building",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_logicbuilding",
            "problem_name": "Add two numbers in LL",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_logicbuilding_segregateoddandevennodesinll",
            "category_id": "linked-list",
            "problem_slug": "segregate-odd-and-even-nodes-in-ll",
            "subcategory_slug": "logic-building",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_logicbuilding",
            "problem_name": "Segregate odd and even nodes in LL",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_logicbuilding_sortallof0's1'sand2's",
            "category_id": "linked-list",
            "problem_slug": "sort-a-ll-of-0's-1's-and-2's",
            "subcategory_slug": "logic-building",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_logicbuilding",
            "problem_name": "Sort a LL of 0's 1's and 2's",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_logicbuilding_removenthnodefromthebackofthell",
            "category_id": "linked-list",
            "problem_slug": "remove-nth-node-from-the-back-of-the-ll",
            "subcategory_slug": "logic-building",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_logicbuilding",
            "problem_name": "Remove Nth node from the back of the LL",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_logicbuilding_reverseall",
            "category_id": "linked-list",
            "problem_slug": "reverse-a-ll",
            "subcategory_slug": "logic-building",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_logicbuilding",
            "problem_name": "Reverse a LL",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "linked-list_faqs(medium)",
        "category_name": "Linked-List",
        "category_id": "linked-list",
        "subcategory_slug": "faqs--medium",
        "subcategory_name": "FAQs (Medium)",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "linked-list_linked-list_faqs(medium)_addonetoanumberrepresentedbyll",
            "category_id": "linked-list",
            "problem_slug": "add-one-to-a-number-represented-by-ll",
            "subcategory_slug": "faqs--medium",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(medium)",
            "problem_name": "Add one to a number represented by LL",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(medium)_checkifllispalindromeornot",
            "category_id": "linked-list",
            "problem_slug": "check-if-ll-is-palindrome-or-not",
            "subcategory_slug": "faqs--medium",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(medium)",
            "problem_name": "Check if LL is palindrome or not",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(medium)_findtheintersectionpointofyll",
            "category_id": "linked-list",
            "problem_slug": "find-the-intersection-point-of-y-ll",
            "subcategory_slug": "faqs--medium",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(medium)",
            "problem_name": "Find the intersection point of Y LL",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(medium)_detectaloopinll",
            "category_id": "linked-list",
            "problem_slug": "detect-a-loop-in-ll",
            "subcategory_slug": "faqs--medium",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(medium)",
            "problem_name": "Detect a loop in LL",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(medium)_findthestartingpointinll",
            "category_id": "linked-list",
            "problem_slug": "find-the-starting-point-in-ll",
            "subcategory_slug": "faqs--medium",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(medium)",
            "problem_name": "Find the starting point in LL",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(medium)_lengthofloopinll",
            "category_id": "linked-list",
            "problem_slug": "length-of-loop-in-ll",
            "subcategory_slug": "faqs--medium",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(medium)",
            "problem_name": "Length of loop in LL",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(medium)_deletethemiddlenodeinll",
            "category_id": "linked-list",
            "problem_slug": "delete-the-middle-node-in-ll",
            "subcategory_slug": "faqs--medium",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(medium)",
            "problem_name": "Delete the middle node in LL",
            "problem_rank": 7,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "linked-list_faqs(hard)",
        "category_name": "Linked-List",
        "category_id": "linked-list",
        "subcategory_slug": "faqs--hard",
        "subcategory_name": "FAQs (Hard)",
        "subcategory_rank": 5,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "linked-list_linked-list_faqs(hard)_reversellingroupofgivensizek",
            "category_id": "linked-list",
            "problem_slug": "reverse-ll-in-group-of-given-size-k",
            "subcategory_slug": "faqs--hard",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(hard)",
            "problem_name": "Reverse LL in group of given size K",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(hard)_rotateall",
            "category_id": "linked-list",
            "problem_slug": "rotate-a-ll",
            "subcategory_slug": "faqs--hard",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(hard)",
            "problem_name": "Rotate a LL",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(hard)_mergesortedlists",
            "category_id": "linked-list",
            "problem_slug": "merge-sorted-lists-",
            "subcategory_slug": "faqs--hard",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(hard)",
            "problem_name": "Merge two Sorted Lists ",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(hard)_flatteningofll",
            "category_id": "linked-list",
            "problem_slug": "flattening-of-ll",
            "subcategory_slug": "faqs--hard",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(hard)",
            "problem_name": "Flattening of LL",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(hard)_sortll",
            "category_id": "linked-list",
            "problem_slug": "sort-ll",
            "subcategory_slug": "faqs--hard",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(hard)",
            "problem_name": "Sort LL",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(hard)_cloneallwithrandomandnextpointer",
            "category_id": "linked-list",
            "problem_slug": "clone-a-ll-with-random-and-next-pointer",
            "subcategory_slug": "faqs--hard",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(hard)",
            "problem_name": "Clone a LL with random and next pointer",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "linked-list_faqs(dll)",
        "category_name": "Linked-List",
        "category_id": "linked-list",
        "subcategory_slug": "faqs--dll",
        "subcategory_name": "FAQS (DLL)",
        "subcategory_rank": 6,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "linked-list_linked-list_faqs(dll)_deletealloccurrencesofakeyindll",
            "category_id": "linked-list",
            "problem_slug": "delete-all-occurrences-of-a-key-in-dll",
            "subcategory_slug": "faqs--dll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(dll)",
            "problem_name": "Delete all occurrences of a key in DLL",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "linked-list_linked-list_faqs(dll)_removeduplicatedfromsorteddll",
            "category_id": "linked-list",
            "problem_slug": "remove-duplicated-from-sorted-dll",
            "subcategory_slug": "faqs--dll",
            "category_slug": "linked-list",
            "subcategory_id": "linked-list_faqs(dll)",
            "problem_name": "Remove duplicated from sorted DLL",
            "problem_rank": 2,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "linked-list_contest",
        "category_name": "Linked-List",
        "category_id": "linked-list",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 7,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "bitmanipulation",
    "category_name": "Bit Manipulation",
    "category_rank": 8,
    "category_slug": "bit-manipulation",
    "subcategories": [
      {
        "subcategory_id": "bitmanipulation_theory",
        "category_name": "Bit Manipulation",
        "category_id": "bitmanipulation",
        "subcategory_slug": "theory",
        "subcategory_name": "Theory",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "bitmanipulation_bitmanipulation_theory_introductiontobitsandtricks",
            "category_id": "bitmanipulation",
            "problem_slug": "introduction-to-bits-and-tricks",
            "subcategory_slug": "theory",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_theory",
            "problem_name": "Introduction to Bits and Tricks",
            "problem_rank": 1,
            "hasIDE": 0
          }
        ]
      },
      {
        "subcategory_id": "bitmanipulation_problems",
        "category_name": "Bit Manipulation",
        "category_id": "bitmanipulation",
        "subcategory_slug": "problems",
        "subcategory_name": "Problems",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "bitmanipulation_bitmanipulation_problems_minimumbitflipstoconvertnumber",
            "category_id": "bitmanipulation",
            "problem_slug": "minimum-bit-flips-to-convert-number",
            "subcategory_slug": "problems",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_problems",
            "problem_name": "Minimum Bit Flips to Convert Number",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "bitmanipulation_bitmanipulation_problems_singlenumber-i",
            "category_id": "bitmanipulation",
            "problem_slug": "single-number---i",
            "subcategory_slug": "problems",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_problems",
            "problem_name": "Single Number - I",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "bitmanipulation_bitmanipulation_problems_singlenumber-ii",
            "category_id": "bitmanipulation",
            "problem_slug": "single-number---ii",
            "subcategory_slug": "problems",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_problems",
            "problem_name": "Single Number - II",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "bitmanipulation_bitmanipulation_problems_singlenumber-iii",
            "category_id": "bitmanipulation",
            "problem_slug": "single-number---iii",
            "subcategory_slug": "problems",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_problems",
            "problem_name": "Single Number - III",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "bitmanipulation_bitmanipulation_problems_dividetwonumberswithoutmultiplicationanddivision",
            "category_id": "bitmanipulation",
            "problem_slug": "divide-two-numbers-without-multiplication-and-division",
            "subcategory_slug": "problems",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_problems",
            "problem_name": "Divide two numbers without multiplication and division",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "bitmanipulation_bitmanipulation_problems_powerset-dup",
            "category_id": "bitmanipulation",
            "problem_slug": "power-set-dup",
            "subcategory_slug": "problems",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_problems",
            "problem_name": "Power Set-dup",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "bitmanipulation_bitmanipulation_problems_xorofnumbersinagivenrange",
            "category_id": "bitmanipulation",
            "problem_slug": "xor-of-numbers-in-a-given-range",
            "subcategory_slug": "problems",
            "category_slug": "bit-manipulation",
            "subcategory_id": "bitmanipulation_problems",
            "problem_name": "XOR of numbers in a given range",
            "problem_rank": 7,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "bitmanipulation_contest",
        "category_name": "Bit Manipulation",
        "category_id": "bitmanipulation",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 3,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "greedyalgorithms",
    "category_name": "Greedy Algorithms",
    "category_rank": 9,
    "category_slug": "greedy-algorithms",
    "subcategories": [
      {
        "subcategory_id": "greedyalgorithms_easy/medium",
        "category_name": "Greedy Algorithms",
        "category_id": "greedyalgorithms",
        "subcategory_slug": "easy",
        "subcategory_name": "Easy",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_easy/medium_assigncookies",
            "category_id": "greedyalgorithms",
            "problem_slug": "assign-cookies",
            "subcategory_slug": "easy",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_easy/medium",
            "problem_name": "Assign Cookies",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_easy/medium_lemonadechange",
            "category_id": "greedyalgorithms",
            "problem_slug": "lemonade-change",
            "subcategory_slug": "easy",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_easy/medium",
            "problem_name": "Lemonade Change",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_easy/medium_jumpgame-i",
            "category_id": "greedyalgorithms",
            "problem_slug": "jump-game---i",
            "subcategory_slug": "easy",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_easy/medium",
            "problem_name": "Jump Game - I",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "greedyalgorithms_schedulingandintervalproblems",
        "category_name": "Greedy Algorithms",
        "category_id": "greedyalgorithms",
        "subcategory_slug": "scheduling-and-interval-problems",
        "subcategory_name": "Scheduling and Interval Problems",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_shortestjobfirst",
            "category_id": "greedyalgorithms",
            "problem_slug": "shortest-job-first",
            "subcategory_slug": "scheduling-and-interval-problems",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_schedulingandintervalproblems",
            "problem_name": "Shortest Job First",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_jobsequencingproblem",
            "category_id": "greedyalgorithms",
            "problem_slug": "job-sequencing-problem",
            "subcategory_slug": "scheduling-and-interval-problems",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_schedulingandintervalproblems",
            "problem_name": "Job sequencing Problem",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_nmeetingsinoneroom",
            "category_id": "greedyalgorithms",
            "problem_slug": "n-meetings-in-one-room",
            "subcategory_slug": "scheduling-and-interval-problems",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_schedulingandintervalproblems",
            "problem_name": "N meetings in one room",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_non-overlappingintervals",
            "category_id": "greedyalgorithms",
            "problem_slug": "non-overlapping-intervals",
            "subcategory_slug": "scheduling-and-interval-problems",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_schedulingandintervalproblems",
            "problem_name": "Non-overlapping Intervals",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_insertinterval",
            "category_id": "greedyalgorithms",
            "problem_slug": "insert-interval",
            "subcategory_slug": "scheduling-and-interval-problems",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_schedulingandintervalproblems",
            "problem_name": "Insert Interval",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_schedulingandintervalproblems_minimumnumberofplatformsrequiredforarailway",
            "category_id": "greedyalgorithms",
            "problem_slug": "minimum-number-of-platforms-required-for-a-railway",
            "subcategory_slug": "scheduling-and-interval-problems",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_schedulingandintervalproblems",
            "problem_name": "Minimum number of platforms required for a railway",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "greedyalgorithms_hard",
        "category_name": "Greedy Algorithms",
        "category_id": "greedyalgorithms",
        "subcategory_slug": "hard",
        "subcategory_name": "Hard",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_hard_validparanthesischecker",
            "category_id": "greedyalgorithms",
            "problem_slug": "valid-paranthesis-checker",
            "subcategory_slug": "hard",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_hard",
            "problem_name": "Valid Paranthesis Checker",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "greedyalgorithms_greedyalgorithms_hard_candy",
            "category_id": "greedyalgorithms",
            "problem_slug": "candy",
            "subcategory_slug": "hard",
            "category_slug": "greedy-algorithms",
            "subcategory_id": "greedyalgorithms_hard",
            "problem_name": "Candy",
            "problem_rank": 2,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "greedyalgorithms_contest",
        "category_name": "Greedy Algorithms",
        "category_id": "greedyalgorithms",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 4,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "slidingwindow/2pointer",
    "category_name": "Sliding Window / 2 Pointer",
    "category_rank": 10,
    "category_slug": "sliding-window-and-2-pointer",
    "subcategories": [
      {
        "subcategory_id": "slidingwindow/2pointer_patternandtemplate",
        "category_name": "Sliding Window / 2 Pointer",
        "category_id": "slidingwindow/2pointer",
        "subcategory_slug": "pattern-and-template",
        "subcategory_name": "Pattern and Template",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_patternandtemplate_theory",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "theory",
            "subcategory_slug": "pattern-and-template",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_patternandtemplate",
            "problem_name": "Theory",
            "problem_rank": 1,
            "hasIDE": 0
          }
        ]
      },
      {
        "subcategory_id": "slidingwindow/2pointer_constantwindow",
        "category_name": "Sliding Window / 2 Pointer",
        "category_id": "slidingwindow/2pointer",
        "subcategory_slug": "constant-window",
        "subcategory_name": "Constant Window",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_constantwindow_maximumpointsyoucanobtainfromcards",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "maximum-points-you-can-obtain-from-cards-",
            "subcategory_slug": "constant-window",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_constantwindow",
            "problem_name": "Maximum Points You Can Obtain from Cards ",
            "problem_rank": 1,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "slidingwindow/2pointer_longestandsmallestwindowproblems",
        "category_name": "Sliding Window / 2 Pointer",
        "category_id": "slidingwindow/2pointer",
        "subcategory_slug": "longest-and-smallest-window-problems",
        "subcategory_name": "Longest and Smallest Window Problems",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_longestsubstringwithoutrepeatingcharacters",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "longest-substring-without-repeating-characters",
            "subcategory_slug": "longest-and-smallest-window-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_longestandsmallestwindowproblems",
            "problem_name": "Longest Substring Without Repeating Characters",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_maxconsecutiveonesiii",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "max-consecutive-ones-iii",
            "subcategory_slug": "longest-and-smallest-window-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_longestandsmallestwindowproblems",
            "problem_name": " Max Consecutive Ones III",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_fruitintobaskets",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "fruit-into-baskets",
            "subcategory_slug": "longest-and-smallest-window-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_longestandsmallestwindowproblems",
            "problem_name": " Fruit Into Baskets",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_longestsubstringwithatmostkdistinctcharacters",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "longest-substring-with-at-most-k-distinct-characters",
            "subcategory_slug": "longest-and-smallest-window-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_longestandsmallestwindowproblems",
            "problem_name": "Longest Substring With At Most K Distinct Characters",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_longestrepeatingcharacterreplacement",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "longest-repeating-character-replacement",
            "subcategory_slug": "longest-and-smallest-window-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_longestandsmallestwindowproblems",
            "problem_name": "Longest Repeating Character Replacement",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_longestandsmallestwindowproblems_minimumwindowsubstring",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "minimum-window-substring-",
            "subcategory_slug": "longest-and-smallest-window-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_longestandsmallestwindowproblems",
            "problem_name": "Minimum Window Substring ",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "slidingwindow/2pointer_countingsubarrayspattern",
        "category_name": "Sliding Window / 2 Pointer",
        "category_id": "slidingwindow/2pointer",
        "subcategory_slug": "counting-subarrays-and-substrings-problems",
        "subcategory_name": "Counting Subarrays / Substrings Problems",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_countingsubarrayspattern_numberofsubstringscontainingallthreecharacters",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "number-of-substrings-containing-all-three-characters",
            "subcategory_slug": "counting-subarrays-and-substrings-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_countingsubarrayspattern",
            "problem_name": "Number of Substrings Containing All Three Characters",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_countingsubarrayspattern_binarysubarrayswithsum",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "binary-subarrays-with-sum",
            "subcategory_slug": "counting-subarrays-and-substrings-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_countingsubarrayspattern",
            "problem_name": "Binary Subarrays With Sum",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "slidingwindow/2pointer_slidingwindow/2pointer_countingsubarrayspattern_countnumberofnicesubarrays",
            "category_id": "slidingwindow/2pointer",
            "problem_slug": "count-number-of-nice-subarrays",
            "subcategory_slug": "counting-subarrays-and-substrings-problems",
            "category_slug": "sliding-window-and-2-pointer",
            "subcategory_id": "slidingwindow/2pointer_countingsubarrayspattern",
            "problem_name": "Count number of Nice subarrays",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "slidingwindow/2pointer_contest",
        "category_name": "Sliding Window / 2 Pointer",
        "category_id": "slidingwindow/2pointer",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 5,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "stack/queues",
    "category_name": "Stack / Queues",
    "category_rank": 11,
    "category_slug": "stack-and-queues",
    "subcategories": [
      {
        "subcategory_id": "stack/queues_implementation",
        "category_name": "Stack / Queues",
        "category_id": "stack/queues",
        "subcategory_slug": "implementation",
        "subcategory_name": "Implementation ",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "stack/queues_stack/queues_implementation_implementationusingdifferentds",
            "category_id": "stack/queues",
            "problem_slug": "implementation-using-different-ds",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Implementation using different DS",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "extras_extras_basicstacks_implementstackusingarrays",
            "category_id": "stack/queues",
            "problem_slug": "implement-stack-using-arrays",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Implement Stack using Arrays",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstacks_implementqueueusingarrays",
            "category_id": "stack/queues",
            "problem_slug": "implement-queue-using-arrays",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Implement Queue using Arrays",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstacks_implementstackusingqueue",
            "category_id": "stack/queues",
            "problem_slug": "implement-stack-using-queue",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Implement Stack using Queue",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstacks_implementqueueusingstack",
            "category_id": "stack/queues",
            "problem_slug": "implement-queue-using-stack",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Implement Queue using Stack",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstacks_implementstackusinglinkedlist",
            "category_id": "stack/queues",
            "problem_slug": "implement-stack-using-linkedlist",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Implement stack using Linkedlist",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "extras_extras_basicstacks_implementqueueusinglinkedlist",
            "category_id": "stack/queues",
            "problem_slug": "implement-queue-using-linkedlist",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Implement queue using Linkedlist",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_implementation_balancedparanthesis",
            "category_id": "stack/queues",
            "problem_slug": "balanced-paranthesis",
            "subcategory_slug": "implementation",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_implementation",
            "problem_name": "Balanced Paranthesis",
            "problem_rank": 8,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "stack/queues_monotonicstack",
        "category_name": "Stack / Queues",
        "category_id": "stack/queues",
        "subcategory_slug": "monotonic-stack",
        "subcategory_name": "Monotonic Stack",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "stack/queues_stack/queues_monotonicstack_nextgreaterelement",
            "category_id": "stack/queues",
            "problem_slug": "next-greater-element",
            "subcategory_slug": "monotonic-stack",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_monotonicstack",
            "problem_name": "Next Greater Element",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_monotonicstack_nextgreaterelement-2",
            "category_id": "stack/queues",
            "problem_slug": "next-greater-element---2",
            "subcategory_slug": "monotonic-stack",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_monotonicstack",
            "problem_name": "Next Greater Element - 2",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_monotonicstack_asteroidcollision",
            "category_id": "stack/queues",
            "problem_slug": "asteroid-collision",
            "subcategory_slug": "monotonic-stack",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_monotonicstack",
            "problem_name": "Asteroid Collision",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_monotonicstack_sumofsubarrayminimums",
            "category_id": "stack/queues",
            "problem_slug": "sum-of-subarray-minimums",
            "subcategory_slug": "monotonic-stack",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_monotonicstack",
            "problem_name": "Sum of Subarray Minimums",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_monotonicstack_sumofsubarrayranges",
            "category_id": "stack/queues",
            "problem_slug": "sum-of-subarray-ranges",
            "subcategory_slug": "monotonic-stack",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_monotonicstack",
            "problem_name": "Sum of Subarray Ranges",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_monotonicstack_removekdigits",
            "category_id": "stack/queues",
            "problem_slug": "remove-k-digits",
            "subcategory_slug": "monotonic-stack",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_monotonicstack",
            "problem_name": "Remove K Digits",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "stack/queues_faqs",
        "category_name": "Stack / Queues",
        "category_id": "stack/queues",
        "subcategory_slug": "faqs",
        "subcategory_name": "FAQs",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "stack/queues_stack/queues_faqs_implementminstack",
            "category_id": "stack/queues",
            "problem_slug": "implement-min-stack",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "Implement Min Stack",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_slidingwindowmaximum",
            "category_id": "stack/queues",
            "problem_slug": "sliding-window-maximum",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "Sliding Window Maximum",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_trappingrainwater",
            "category_id": "stack/queues",
            "problem_slug": "trapping-rainwater",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "Trapping Rainwater",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_largestrectangleinahistogram",
            "category_id": "stack/queues",
            "problem_slug": "largest-rectangle-in-a-histogram",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "Largest rectangle in a histogram",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_maximumrectangles",
            "category_id": "stack/queues",
            "problem_slug": "maximum-rectangles",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "Maximum Rectangles",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_stockspanproblem",
            "category_id": "stack/queues",
            "problem_slug": "stock-span-problem",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "Stock span problem",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_celebrityproblem",
            "category_id": "stack/queues",
            "problem_slug": "celebrity-problem",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "Celebrity Problem",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_lrucache",
            "category_id": "stack/queues",
            "problem_slug": "lru-cache",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "LRU Cache",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "stack/queues_stack/queues_faqs_lfucache",
            "category_id": "stack/queues",
            "problem_slug": "lfu-cache",
            "subcategory_slug": "faqs",
            "category_slug": "stack-and-queues",
            "subcategory_id": "stack/queues_faqs",
            "problem_name": "LFU Cache",
            "problem_rank": 9,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "heaps",
    "category_name": "Heaps",
    "category_rank": 12,
    "category_slug": "heaps",
    "subcategories": [
      {
        "subcategory_id": "heaps_implementationandtheory",
        "category_name": "Heaps",
        "category_id": "heaps",
        "subcategory_slug": "theory-and-implementation",
        "subcategory_name": "Theory and Implementation",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "heaps_heaps_implementationandtheory_implementpqusingheaps",
            "category_id": "heaps",
            "problem_slug": "implement-pq-using-heaps",
            "subcategory_slug": "theory-and-implementation",
            "category_slug": "heaps",
            "subcategory_id": "heaps_implementationandtheory",
            "problem_name": "Implement PQ using Heaps",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "heaps_heaps_implementationandtheory_checkifanarrayrepresentsaminheap",
            "category_id": "heaps",
            "problem_slug": "check-if-an-array-represents-a-min-heap-",
            "subcategory_slug": "theory-and-implementation",
            "category_slug": "heaps",
            "subcategory_id": "heaps_implementationandtheory",
            "problem_name": "Check if an array represents a min heap ",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "heaps_heaps_implementationandtheory_convertminheaptomaxheap",
            "category_id": "heaps",
            "problem_slug": "convert-min-heap-to-max-heap",
            "subcategory_slug": "theory-and-implementation",
            "category_slug": "heaps",
            "subcategory_id": "heaps_implementationandtheory",
            "problem_name": "Convert Min Heap to Max Heap",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "heaps_heaps_implementationandtheory_k-thlargestelementinanarray",
            "category_id": "heaps",
            "problem_slug": "k-th-largest-element-in-an-array",
            "subcategory_slug": "theory-and-implementation",
            "category_slug": "heaps",
            "subcategory_id": "heaps_implementationandtheory",
            "problem_name": "K-th Largest element in an array",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "heaps_faqs",
        "category_name": "Heaps",
        "category_id": "heaps",
        "subcategory_slug": "faqs",
        "subcategory_name": "FAQs",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "heaps_heaps_faqs_mergeksortedlists",
            "category_id": "heaps",
            "problem_slug": "merge-k-sorted-lists",
            "subcategory_slug": "faqs",
            "category_slug": "heaps",
            "subcategory_id": "heaps_faqs",
            "problem_name": "Merge K sorted Lists",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "heaps_heaps_faqs_designtwitter",
            "category_id": "heaps",
            "problem_slug": "design-twitter",
            "subcategory_slug": "faqs",
            "category_slug": "heaps",
            "subcategory_id": "heaps_faqs",
            "problem_name": "Design Twitter",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "heaps_heaps_faqs_kthlargestelementinastreamofrunningintegers",
            "category_id": "heaps",
            "problem_slug": "kth-largest-element-in-a-stream-of-running-integers",
            "subcategory_slug": "faqs",
            "category_slug": "heaps",
            "subcategory_id": "heaps_faqs",
            "problem_name": "Kth largest element in a stream of running integers",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "heaps_heaps_faqs_findmedianfromdatastream",
            "category_id": "heaps",
            "problem_slug": "find-median-from-data-stream",
            "subcategory_slug": "faqs",
            "category_slug": "heaps",
            "subcategory_id": "heaps_faqs",
            "problem_name": "Find Median from Data Stream",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "heaps_heaps_faqs_maximumsumcombination",
            "category_id": "heaps",
            "problem_slug": "maximum-sum-combination",
            "subcategory_slug": "faqs",
            "category_slug": "heaps",
            "subcategory_id": "heaps_faqs",
            "problem_name": "Maximum Sum Combination",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "binarytrees",
    "category_name": "Binary Trees",
    "category_rank": 13,
    "category_slug": "binary-trees",
    "subcategories": [
      {
        "subcategory_id": "binarytrees_theory/traversals",
        "category_name": "Binary Trees",
        "category_id": "binarytrees",
        "subcategory_slug": "theory-and-traversals",
        "subcategory_name": "Theory/Traversals",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarytrees_binarytrees_theory/traversals_introduction",
            "category_id": "binarytrees",
            "problem_slug": "introduction-",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_theory/traversals",
            "problem_name": "Introduction ",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "binarytrees_binarytrees_theory/traversals_preordertraversal",
            "category_id": "binarytrees",
            "problem_slug": "preorder-traversal",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_theory/traversals",
            "problem_name": "Preorder Traversal",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_theory/traversals_inordertraversal",
            "category_id": "binarytrees",
            "problem_slug": "inorder-traversal",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_theory/traversals",
            "problem_name": "Inorder Traversal",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_theory/traversals_postordertraversal",
            "category_id": "binarytrees",
            "problem_slug": "postorder-traversal",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_theory/traversals",
            "problem_name": "Postorder Traversal",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_theory/traversals_levelordertraversal",
            "category_id": "binarytrees",
            "problem_slug": "level-order-traversal",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_theory/traversals",
            "problem_name": "Level Order Traversal",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_theory/traversals_pre,post,inorderinonetraversal",
            "category_id": "binarytrees",
            "problem_slug": "pre,-post,-inorder-in-one-traversal",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_theory/traversals",
            "problem_name": "Pre, Post, Inorder in one traversal",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarytrees_mediumproblems",
        "category_name": "Binary Trees",
        "category_id": "binarytrees",
        "subcategory_slug": "medium-problems",
        "subcategory_name": "Medium Problems",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarytrees_binarytrees_mediumproblems_maximumdepthinbt",
            "category_id": "binarytrees",
            "problem_slug": "maximum-depth-in-bt",
            "subcategory_slug": "medium-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_mediumproblems",
            "problem_name": "Maximum Depth in BT",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_mediumproblems_checkiftwotreesareidenticalornot",
            "category_id": "binarytrees",
            "problem_slug": "check-if-two-trees-are-identical-or-not",
            "subcategory_slug": "medium-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_mediumproblems",
            "problem_name": "Check if two trees are identical or not",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_mediumproblems_checkforbalancedbinarytrees",
            "category_id": "binarytrees",
            "problem_slug": "check-for-balanced-binary-tree",
            "subcategory_slug": "medium-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_mediumproblems",
            "problem_name": "Check for balanced binary tree",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_mediumproblems_diameterofbinarytree",
            "category_id": "binarytrees",
            "problem_slug": "diameter-of-binary-tree",
            "subcategory_slug": "medium-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_mediumproblems",
            "problem_name": "Diameter of Binary Tree",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_mediumproblems_maximumpathsum",
            "category_id": "binarytrees",
            "problem_slug": "maximum-path-sum-",
            "subcategory_slug": "medium-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_mediumproblems",
            "problem_name": "Maximum path sum ",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_mediumproblems_checkforsymmetricalbts",
            "category_id": "binarytrees",
            "problem_slug": "check-for-symmetrical-bts",
            "subcategory_slug": "medium-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_mediumproblems",
            "problem_name": "Check for symmetrical BTs",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarytrees_faqs",
        "category_name": "Binary Trees",
        "category_id": "binarytrees",
        "subcategory_slug": "faqs",
        "subcategory_name": "FAQs",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarytrees_binarytrees_faqs_zigzagorspiraltraversal",
            "category_id": "binarytrees",
            "problem_slug": "zig-zag-or-spiral-traversal",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Zig Zag or Spiral Traversal",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_boundarytraversal",
            "category_id": "binarytrees",
            "problem_slug": "boundary-traversal",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Boundary Traversal",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_verticalordertraversal",
            "category_id": "binarytrees",
            "problem_slug": "vertical-order-traversal",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Vertical Order Traversal",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_topviewofbt",
            "category_id": "binarytrees",
            "problem_slug": "top-view-of-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Top View of BT",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_bottomviewofbt",
            "category_id": "binarytrees",
            "problem_slug": "bottom-view-of-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Bottom view of BT",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_right/leftviewofbt",
            "category_id": "binarytrees",
            "problem_slug": "right-left-view-of-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Right/Left View of BT",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_printroottonotepathinbt",
            "category_id": "binarytrees",
            "problem_slug": "print-root-to-note-path-in-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Print root to node path in BT",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_lcainbt",
            "category_id": "binarytrees",
            "problem_slug": "lca-in-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "LCA in BT",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_maximumwidthofbt",
            "category_id": "binarytrees",
            "problem_slug": "maximum-width-of-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Maximum Width of BT",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_printallnodesatadistanceofkinbt",
            "category_id": "binarytrees",
            "problem_slug": "print-all-nodes-at-a-distance-of-k-in-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Print all nodes at a distance of K in BT",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_minimumtimetakentoburnthebtfromagivennode",
            "category_id": "binarytrees",
            "problem_slug": "minimum-time-taken-to-burn-the-bt-from-a-given-node",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Minimum time taken to burn the BT from a given Node",
            "problem_rank": 11,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_faqs_counttotalnoesinacompletebt",
            "category_id": "binarytrees",
            "problem_slug": "count-total-nodes-in-a-complete-bt",
            "subcategory_slug": "faqs",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_faqs",
            "problem_name": "Count total nodes in a complete BT",
            "problem_rank": 12,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarytrees_constructionproblems",
        "category_name": "Binary Trees",
        "category_id": "binarytrees",
        "subcategory_slug": "construction-problems",
        "subcategory_name": "Construction Problems",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarytrees_binarytrees_constructionproblems_requirementsneededtoconstructauniquebt",
            "category_id": "binarytrees",
            "problem_slug": "requirements-needed-to-construct-a-unique-bt",
            "subcategory_slug": "construction-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_constructionproblems",
            "problem_name": "Requirements needed to construct a unique BT",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_constructionproblems_constructabtfrompreorderandinorder",
            "category_id": "binarytrees",
            "problem_slug": "construct-a-bt-from-preorder-and-inorder",
            "subcategory_slug": "construction-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_constructionproblems",
            "problem_name": "Construct a BT from Preorder and Inorder",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_constructionproblems_constructabtfrompostorderandinorder",
            "category_id": "binarytrees",
            "problem_slug": "construct-a-bt-from-postorder-and-inorder",
            "subcategory_slug": "construction-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_constructionproblems",
            "problem_name": "Construct a BT from Postorder and Inorder",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_constructionproblems_serializeandde-serializebt",
            "category_id": "binarytrees",
            "problem_slug": "serialize-and-de-serialize-bt",
            "subcategory_slug": "construction-problems",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_constructionproblems",
            "problem_name": "Serialize and De-serialize BT",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarytrees_traversalinconstantspace",
        "category_name": "Binary Trees",
        "category_id": "binarytrees",
        "subcategory_slug": "traversal-in-constant-space",
        "subcategory_name": "Traversal in Constant Space",
        "subcategory_rank": 5,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarytrees_binarytrees_traversalinconstantspace_morristraversal|inorder",
            "category_id": "binarytrees",
            "problem_slug": "morris-inorder-traversal-",
            "subcategory_slug": "traversal-in-constant-space",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_traversalinconstantspace",
            "problem_name": "Morris Inorder Traversal ",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarytrees_binarytrees_traversalinconstantspace_morrispreordertraversal",
            "category_id": "binarytrees",
            "problem_slug": "morris-preorder-traversal-",
            "subcategory_slug": "traversal-in-constant-space",
            "category_slug": "binary-trees",
            "subcategory_id": "binarytrees_traversalinconstantspace",
            "problem_name": "Morris Preorder Traversal ",
            "problem_rank": 2,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarytrees_contest",
        "category_name": "Binary Trees",
        "category_id": "binarytrees",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 6,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "binarysearchtrees",
    "category_name": "Binary Search Trees",
    "category_rank": 14,
    "category_slug": "binary-search-trees",
    "subcategories": [
      {
        "subcategory_id": "binarysearchtrees_theoryandbasics",
        "category_name": "Binary Search Trees",
        "category_id": "binarysearchtrees",
        "subcategory_slug": "theory-and-basics",
        "subcategory_name": "Theory and Basics",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_theoryandbasics_introductiontobst",
            "category_id": "binarysearchtrees",
            "problem_slug": "introduction-to-bst",
            "subcategory_slug": "theory-and-basics",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_theoryandbasics",
            "problem_name": "Introduction to BST",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_theoryandbasics_searchinbst",
            "category_id": "binarysearchtrees",
            "problem_slug": "search-in-bst",
            "subcategory_slug": "theory-and-basics",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_theoryandbasics",
            "problem_name": "Search in BST",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_theoryandbasics_floorinabst",
            "category_id": "binarysearchtrees",
            "problem_slug": "floor-and-ceil-in-a-bst",
            "subcategory_slug": "theory-and-basics",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_theoryandbasics",
            "problem_name": "Floor and Ceil in a BST",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearchtrees_medium",
        "category_name": "Binary Search Trees",
        "category_id": "binarysearchtrees",
        "subcategory_slug": "medium",
        "subcategory_name": "Medium",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_medium_insertagivennodeinbst",
            "category_id": "binarysearchtrees",
            "problem_slug": "insert-a-given-node-in-bst",
            "subcategory_slug": "medium",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_medium",
            "problem_name": "Insert a given node in BST",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_medium_deleteanodeinbst",
            "category_id": "binarysearchtrees",
            "problem_slug": "delete-a-node-in-bst",
            "subcategory_slug": "medium",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_medium",
            "problem_name": "Delete a node in BST",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_medium_kthsmallestandlargestelementinbst",
            "category_id": "binarysearchtrees",
            "problem_slug": "kth-smallest-and-largest-element-in-bst",
            "subcategory_slug": "medium",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_medium",
            "problem_name": "Kth Smallest and Largest element in BST",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_medium_checkifatreeisabstornot",
            "category_id": "binarysearchtrees",
            "problem_slug": "check-if-a-tree-is-a-bst-or-not",
            "subcategory_slug": "medium",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_medium",
            "problem_name": "Check if a tree is a BST or not",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_medium_lcainbst",
            "category_id": "binarysearchtrees",
            "problem_slug": "lca-in-bst",
            "subcategory_slug": "medium",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_medium",
            "problem_name": "LCA in BST",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_medium_constructabstfromapreordertraversal",
            "category_id": "binarysearchtrees",
            "problem_slug": "construct-a-bst-from-a-preorder-traversal",
            "subcategory_slug": "medium",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_medium",
            "problem_name": "Construct a BST from a preorder traversal",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_medium_inordersuccessorandpredecessorinbst",
            "category_id": "binarysearchtrees",
            "problem_slug": "inorder-successor-and-predecessor-in-bst",
            "subcategory_slug": "medium",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_medium",
            "problem_name": "Inorder successor and predecessor in BST",
            "problem_rank": 7,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearchtrees_faqs",
        "category_name": "Binary Search Trees",
        "category_id": "binarysearchtrees",
        "subcategory_slug": "faqs",
        "subcategory_name": "FAQs",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_faqs_binarysearchtreeiterator",
            "category_id": "binarysearchtrees",
            "problem_slug": "bst-iterator",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_faqs",
            "problem_name": "BST iterator",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_faqs_twosuminbst",
            "category_id": "binarysearchtrees",
            "problem_slug": "two-sum-in-bst",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_faqs",
            "problem_name": "Two sum in BST",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_faqs_correctbstwithtwonodesswapped",
            "category_id": "binarysearchtrees",
            "problem_slug": "correct-bst-with-two-nodes-swapped",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_faqs",
            "problem_name": "Correct BST with two nodes swapped",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "binarysearchtrees_binarysearchtrees_faqs_largestbstinbinarytree",
            "category_id": "binarysearchtrees",
            "problem_slug": "largest-bst-in-binary-tree",
            "subcategory_slug": "faqs",
            "category_slug": "binary-search-trees",
            "subcategory_id": "binarysearchtrees_faqs",
            "problem_name": "Largest BST in Binary Tree",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "binarysearchtrees_contest",
        "category_name": "Binary Search Trees",
        "category_id": "binarysearchtrees",
        "subcategory_slug": "contest",
        "subcategory_name": "Contest",
        "subcategory_rank": 4,
        "subcategory_type": "contest",
        "problems": []
      }
    ]
  },
  {
    "category_id": "graphs",
    "category_name": "Graphs",
    "category_rank": 15,
    "category_slug": "graphs",
    "subcategories": [
      {
        "subcategory_id": "graphs_theoryandtraversals",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "theory-and-traversals",
        "subcategory_name": "Theory and traversals",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_theoryandtraversals_introductiontograph",
            "category_id": "graphs",
            "problem_slug": "introduction-to-graph",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "graphs",
            "subcategory_id": "graphs_theoryandtraversals",
            "problem_name": "Introduction to Graph",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "graphs_graphs_theoryandtraversals_connectedcomponents",
            "category_id": "graphs",
            "problem_slug": "connected-components",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "graphs",
            "subcategory_id": "graphs_theoryandtraversals",
            "problem_name": "Connected Components",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_theoryandtraversals_traversaltechniques",
            "category_id": "graphs",
            "problem_slug": "traversal-techniques",
            "subcategory_slug": "theory-and-traversals",
            "category_slug": "graphs",
            "subcategory_id": "graphs_theoryandtraversals",
            "problem_name": "Traversal Techniques",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "graphs_traversalproblems",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "traversal-problems",
        "subcategory_name": "Traversal Problems",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_traversalproblems_numberofprovinces",
            "category_id": "graphs",
            "problem_slug": "number-of-provinces",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Number of provinces",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_traversalproblems_numberofislands",
            "category_id": "graphs",
            "problem_slug": "number-of-islands",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Number of islands",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_traversalproblems_floodfillalgorithm",
            "category_id": "graphs",
            "problem_slug": "flood-fill-algorithm",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Flood fill algorithm",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_traversalproblems_numberofenclaves",
            "category_id": "graphs",
            "problem_slug": "number-of-enclaves",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Number of enclaves",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_traversalproblems_rottenoranges",
            "category_id": "graphs",
            "problem_slug": "rotten-oranges",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Rotten Oranges",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_traversalproblems_distanceofnearestcellhavingone",
            "category_id": "graphs",
            "problem_slug": "distance-of-nearest-cell-having-one",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Distance of nearest cell having one",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_traversalproblems_surroundedregions",
            "category_id": "graphs",
            "problem_slug": "surrounded-regions",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Surrounded Regions",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_traversalproblems_numberofdistinctislands",
            "category_id": "graphs",
            "problem_slug": "number-of-distinct-islands",
            "subcategory_slug": "traversal-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_traversalproblems",
            "problem_name": "Number of distinct islands",
            "problem_rank": 8,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "graphs_cycles",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "cycles",
        "subcategory_name": "Cycles ",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_cycles_detectacycleinanundirectedgraph",
            "category_id": "graphs",
            "problem_slug": "detect-a-cycle-in-an-undirected-graph",
            "subcategory_slug": "cycles",
            "category_slug": "graphs",
            "subcategory_id": "graphs_cycles",
            "problem_name": "Detect a cycle in an undirected graph",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_cycles_bipartitegraph",
            "category_id": "graphs",
            "problem_slug": "bipartite-graph",
            "subcategory_slug": "cycles",
            "category_slug": "graphs",
            "subcategory_id": "graphs_cycles",
            "problem_name": "Bipartite graph",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_cycles_topologicalsortorkahn'salgorithm",
            "category_id": "graphs",
            "problem_slug": "topological-sort-or-kahns-algorithm",
            "subcategory_slug": "cycles",
            "category_slug": "graphs",
            "subcategory_id": "graphs_cycles",
            "problem_name": "Topological sort or Kahn's algorithm",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_cycles_detectacycleinadirectedgraph",
            "category_id": "graphs",
            "problem_slug": "detect-a-cycle-in-a-directed-graph",
            "subcategory_slug": "cycles",
            "category_slug": "graphs",
            "subcategory_id": "graphs_cycles",
            "problem_name": "Detect a cycle in a directed graph",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "graphs_hardproblems",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "hard-problems",
        "subcategory_name": "Hard Problems",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_hardproblems_findeventualsafestates",
            "category_id": "graphs",
            "problem_slug": "find-eventual-safe-states",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Find eventual safe states",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblems_courseschedulei",
            "category_id": "graphs",
            "problem_slug": "course-schedule-i",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Course Schedule I",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblems_coursescheduleii",
            "category_id": "graphs",
            "problem_slug": "course-schedule-ii",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Course Schedule II",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblems_alientdictionary",
            "category_id": "graphs",
            "problem_slug": "alient-dictionary",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Alien Dictionary",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblems_shortestpathindag",
            "category_id": "graphs",
            "problem_slug": "shortest-path-in-dag",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Shortest path in DAG",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblems_shortestpathinundirectedgraphwithunitweights",
            "category_id": "graphs",
            "problem_slug": "shortest-path-in-undirected-graph-with-unit-weights",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Shortest path in undirected graph with unit weights",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblems_wordladderi",
            "category_id": "graphs",
            "problem_slug": "word-ladder-i",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Word ladder I",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblems_wordladderii",
            "category_id": "graphs",
            "problem_slug": "word-ladder-ii",
            "subcategory_slug": "hard-problems",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblems",
            "problem_name": "Word ladder II",
            "problem_rank": 8,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "graphs_shortestpathalgorithms",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "shortest-path-algorithms",
        "subcategory_name": "Shortest Path Algorithms",
        "subcategory_rank": 5,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_dijkstra'salgorithm",
            "category_id": "graphs",
            "problem_slug": "dijkstra's-algorithm",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Dijkstra's algorithm",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_printshortestpath",
            "category_id": "graphs",
            "problem_slug": "print-shortest-path-",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Print Shortest Path ",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_shortestpathwithminimumeffort",
            "category_id": "graphs",
            "problem_slug": "shortest-path-with-minimum-effort",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Shortest Distance in a Binary Maze",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_pathwithminimumeffort",
            "category_id": "graphs",
            "problem_slug": "path-with-minimum-effort",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Path with minimum effort",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_cheapestflightwithinkstops",
            "category_id": "graphs",
            "problem_slug": "cheapest-flight-within-k-stops",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Cheapest flight within K stops",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_minimummultiplicationstoreachend",
            "category_id": "graphs",
            "problem_slug": "minimum-multiplications-to-reach-end",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Minimum multiplications to reach end",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_numberofwaystoarriveatdestination",
            "category_id": "graphs",
            "problem_slug": "number-of-ways-to-arrive-at-destination",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Number of ways to arrive at destination",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_bellmanfordalgorithm",
            "category_id": "graphs",
            "problem_slug": "bellman-ford-algorithm",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Bellman ford algorithm",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_floydwarshallalgorithm",
            "category_id": "graphs",
            "problem_slug": "floyd-warshall-algorithm",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Floyd warshall algorithm",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_shortestpathalgorithms_findthecitywiththesmallestnumberofneighbors",
            "category_id": "graphs",
            "problem_slug": "find-the-city-with-the-smallest-number-of-neighbors",
            "subcategory_slug": "shortest-path-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_shortestpathalgorithms",
            "problem_name": "Find the city with the smallest number of neighbors",
            "problem_rank": 10,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "graphs_minimumspanningtree",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "minimum-spanning-tree",
        "subcategory_name": "Minimum Spanning Tree",
        "subcategory_rank": 6,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_minimumspanningtree_msttheory",
            "category_id": "graphs",
            "problem_slug": "mst-theory",
            "subcategory_slug": "minimum-spanning-tree",
            "category_slug": "graphs",
            "subcategory_id": "graphs_minimumspanningtree",
            "problem_name": "MST theory",
            "problem_rank": 1,
            "hasIDE": 0
          },
          {
            "problem_id": "graphs_graphs_minimumspanningtree_disjointset",
            "category_id": "graphs",
            "problem_slug": "disjoint-set-",
            "subcategory_slug": "minimum-spanning-tree",
            "category_slug": "graphs",
            "subcategory_id": "graphs_minimumspanningtree",
            "problem_name": "Disjoint Set ",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_minimumspanningtree_findthemstweight",
            "category_id": "graphs",
            "problem_slug": "find-the-mst-weight",
            "subcategory_slug": "minimum-spanning-tree",
            "category_slug": "graphs",
            "subcategory_id": "graphs_minimumspanningtree",
            "problem_name": "Find the MST weight",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "graphs_hardproblemsii",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "hard-problems-ii",
        "subcategory_name": "Hard Problems II",
        "subcategory_rank": 7,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_hardproblemsii_numberofprovinces",
            "category_id": "graphs",
            "problem_slug": "number-of-provinces",
            "subcategory_slug": "hard-problems-ii",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblemsii",
            "problem_name": "Number of provinces",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblemsii_numberofoperationstomakenetworkconnected",
            "category_id": "graphs",
            "problem_slug": "number-of-operations-to-make-network-connected",
            "subcategory_slug": "hard-problems-ii",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblemsii",
            "problem_name": "Number of operations to make network connected",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblemsii_accountsmerge",
            "category_id": "graphs",
            "problem_slug": "accounts-merge",
            "subcategory_slug": "hard-problems-ii",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblemsii",
            "problem_name": "Accounts merge",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblemsii_numberofislandsii",
            "category_id": "graphs",
            "problem_slug": "number-of-islands-ii",
            "subcategory_slug": "hard-problems-ii",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblemsii",
            "problem_name": "Number of islands II",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblemsii_makingalargeisland",
            "category_id": "graphs",
            "problem_slug": "making-a-large-island",
            "subcategory_slug": "hard-problems-ii",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblemsii",
            "problem_name": "Making a large island",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_hardproblemsii_moststonesremovedwithsameroworcolumn",
            "category_id": "graphs",
            "problem_slug": "most-stones-removed-with-same-row-or-column",
            "subcategory_slug": "hard-problems-ii",
            "category_slug": "graphs",
            "subcategory_id": "graphs_hardproblemsii",
            "problem_name": "Most stones removed with same row or column",
            "problem_rank": 6,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "graphs_additionalalgorithms",
        "category_name": "Graphs",
        "category_id": "graphs",
        "subcategory_slug": "additional-algorithms",
        "subcategory_name": "Additional Algorithms",
        "subcategory_rank": 8,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "graphs_graphs_additionalalgorithms_kosaraju'salgorithm",
            "category_id": "graphs",
            "problem_slug": "kosaraju's-algorithm",
            "subcategory_slug": "additional-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_additionalalgorithms",
            "problem_name": "Kosaraju's algorithm",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_additionalalgorithms_bridgesingraph",
            "category_id": "graphs",
            "problem_slug": "bridges-in-graph",
            "subcategory_slug": "additional-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_additionalalgorithms",
            "problem_name": "Bridges in graph",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "graphs_graphs_additionalalgorithms_articulationpointingraph",
            "category_id": "graphs",
            "problem_slug": "articulation-point-in-graph",
            "subcategory_slug": "additional-algorithms",
            "category_slug": "graphs",
            "subcategory_id": "graphs_additionalalgorithms",
            "problem_name": "Articulation point in graph",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "dynamicprogramming",
    "category_name": "Dynamic Programming",
    "category_rank": 16,
    "category_slug": "dynamic-programming",
    "subcategories": [
      {
        "subcategory_id": "dynamicprogramming_introduction",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "introduction",
        "subcategory_name": "Introduction",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_introduction_introductiontodp",
            "category_id": "dynamicprogramming",
            "problem_slug": "introduction-to-dp",
            "subcategory_slug": "introduction",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_introduction",
            "problem_name": "Introduction to DP",
            "problem_rank": 1,
            "hasIDE": 0
          }
        ]
      },
      {
        "subcategory_id": "dynamicprogramming_1ddp",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "1d-dp",
        "subcategory_name": "1D DP",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_1ddp_climbingstairs",
            "category_id": "dynamicprogramming",
            "problem_slug": "climbing-stairs",
            "subcategory_slug": "1d-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_1ddp",
            "problem_name": "Climbing stairs",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_1ddp_frogjump",
            "category_id": "dynamicprogramming",
            "problem_slug": "frog-jump",
            "subcategory_slug": "1d-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_1ddp",
            "problem_name": "Frog Jump",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_1ddp_frogjumpwithkdistances",
            "category_id": "dynamicprogramming",
            "problem_slug": "frog-jump-with-k-distances",
            "subcategory_slug": "1d-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_1ddp",
            "problem_name": "Frog jump with K distances",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_1ddp_maximumsumofnonadjacentelements",
            "category_id": "dynamicprogramming",
            "problem_slug": "maximum-sum-of-non-adjacent-elements",
            "subcategory_slug": "1d-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_1ddp",
            "problem_name": "Maximum sum of non adjacent elements",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_1ddp_houserobber",
            "category_id": "dynamicprogramming",
            "problem_slug": "house-robber",
            "subcategory_slug": "1d-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_1ddp",
            "problem_name": "House robber",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "dynamicprogramming_2ddp",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "2d-dp",
        "subcategory_name": "2D DP",
        "subcategory_rank": 3,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_2ddp_ninja'straining",
            "category_id": "dynamicprogramming",
            "problem_slug": "ninja's-training",
            "subcategory_slug": "2d-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_2ddp",
            "problem_name": "Ninja's training",
            "problem_rank": 1,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "dynamicprogramming_dpongrids",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "dp-on-grids",
        "subcategory_name": "DP on grids",
        "subcategory_rank": 4,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dpongrids_griduniquepaths",
            "category_id": "dynamicprogramming",
            "problem_slug": "grid-unique-paths",
            "subcategory_slug": "dp-on-grids",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dpongrids",
            "problem_name": "Grid unique paths",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dpongrids_uniquepathsii",
            "category_id": "dynamicprogramming",
            "problem_slug": "unique-paths-ii",
            "subcategory_slug": "dp-on-grids",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dpongrids",
            "problem_name": "Unique paths II",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dpongrids_minimumpathsumingrid",
            "category_id": "dynamicprogramming",
            "problem_slug": "minimum-path-sum-in-grid",
            "subcategory_slug": "dp-on-grids",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dpongrids",
            "problem_name": "Minimum path sum in grid",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dpongrids_triangle",
            "category_id": "dynamicprogramming",
            "problem_slug": "triangle",
            "subcategory_slug": "dp-on-grids",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dpongrids",
            "problem_name": "Triangle",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dpongrids_cherrypickupii",
            "category_id": "dynamicprogramming",
            "problem_slug": "cherry-pickup-ii",
            "subcategory_slug": "dp-on-grids",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dpongrids",
            "problem_name": "Cherry pickup II",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "dynamicprogramming_dponstocks",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "dp-on-stocks",
        "subcategory_name": "DP on stocks",
        "subcategory_rank": 5,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstoc",
            "category_id": "dynamicprogramming",
            "problem_slug": "best-time-to-buy-and-sell-stock",
            "subcategory_slug": "dp-on-stocks",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstocks",
            "problem_name": "Best time to buy and sell stock",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockii",
            "category_id": "dynamicprogramming",
            "problem_slug": "best-time-to-buy-and-sell-stock-ii",
            "subcategory_slug": "dp-on-stocks",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstocks",
            "problem_name": "Best time to buy and sell stock II",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockiii",
            "category_id": "dynamicprogramming",
            "problem_slug": "best-time-to-buy-and-sell-stock-iii",
            "subcategory_slug": "dp-on-stocks",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstocks",
            "problem_name": "Best time to buy and sell stock III",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockiv",
            "category_id": "dynamicprogramming",
            "problem_slug": "best-time-to-buy-and-sell-stock-iv",
            "subcategory_slug": "dp-on-stocks",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstocks",
            "problem_name": "Best time to buy and sell stock IV",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstocks_besttimetobuyandsellstockwithcooldownandtransactionfees",
            "category_id": "dynamicprogramming",
            "problem_slug": "best-time-to-buy-and-sell-stock-with-cooldown-and-transaction-fees",
            "subcategory_slug": "dp-on-stocks",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstocks",
            "problem_name": "Best time to buy and sell stock with transaction fees",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "dynamicprogramming_dponsubsequences",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "dp-on-subsequences",
        "subcategory_name": "DP on subsequences",
        "subcategory_rank": 6,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_subsetsumequalstotarget",
            "category_id": "dynamicprogramming",
            "problem_slug": "subset-sum-equals-to-target",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Subset sum equals to target",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_partitionequalsubsetsum",
            "category_id": "dynamicprogramming",
            "problem_slug": "partition-equal-subset-sum",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Partition equal subset sum",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_partitionasetintotwosubsetswithminimumabsolutesumdifference",
            "category_id": "dynamicprogramming",
            "problem_slug": "partition-a-set-into-two-subsets-with-minimum-absolute-sum-difference",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Partition a set into two subsets with minimum absolute sum difference",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_countsubsetswithsumk",
            "category_id": "dynamicprogramming",
            "problem_slug": "count-subsets-with-sum-k",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Count subsets with sum K",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_countpartitionswithgivendifference",
            "category_id": "dynamicprogramming",
            "problem_slug": "count-partitions-with-given-difference",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Count partitions with given difference",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_0and1knapsack",
            "category_id": "dynamicprogramming",
            "problem_slug": "0-and-1-knapsack",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "0 and 1 Knapsack",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_minimumcoings",
            "category_id": "dynamicprogramming",
            "problem_slug": "minimum-coins",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Minimum coins",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_targetsum",
            "category_id": "dynamicprogramming",
            "problem_slug": "target-sum",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Target sum",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_coinchangeii",
            "category_id": "dynamicprogramming",
            "problem_slug": "coin-change-ii",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Coin change II",
            "problem_rank": 9,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_unboundedknapsack",
            "category_id": "dynamicprogramming",
            "problem_slug": "unbounded-knapsack",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Unbounded knapsack",
            "problem_rank": 10,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponsubsequences_rodcuttingproblem",
            "category_id": "dynamicprogramming",
            "problem_slug": "rod-cutting-problem",
            "subcategory_slug": "dp-on-subsequences",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponsubsequences",
            "problem_name": "Rod cutting problem",
            "problem_rank": 11,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "dynamicprogramming_dponstrings",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "dp-on-strings",
        "subcategory_name": "DP on strings",
        "subcategory_rank": 7,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_longestcommonsubsequence",
            "category_id": "dynamicprogramming",
            "problem_slug": "longest-common-subsequence",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Longest common subsequence",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_longestcommonsubstring",
            "category_id": "dynamicprogramming",
            "problem_slug": "longest-common-substring",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Longest common substring",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_longestpalindromicsubsequence",
            "category_id": "dynamicprogramming",
            "problem_slug": "longest-palindromic-subsequence",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Longest palindromic subsequence",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_minimuminsertionstomakestringpalindroms",
            "category_id": "dynamicprogramming",
            "problem_slug": "minimum-insertions-to-make-string-palindrome",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Minimum insertions to make string palindrome",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_minimuminsertionsordeletionstoconvertstringatob",
            "category_id": "dynamicprogramming",
            "problem_slug": "minimum-insertions-or-deletions-to-convert-string-a-to-b",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Minimum insertions or deletions to convert string A to B",
            "problem_rank": 5,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_shortestcommonsupersequence",
            "category_id": "dynamicprogramming",
            "problem_slug": "shortest-common-supersequence",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Shortest common supersequence",
            "problem_rank": 6,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_distinctsubsequences",
            "category_id": "dynamicprogramming",
            "problem_slug": "distinct-subsequences",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Distinct subsequences",
            "problem_rank": 7,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_editdistance",
            "category_id": "dynamicprogramming",
            "problem_slug": "edit-distance",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Edit distance",
            "problem_rank": 8,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_dponstrings_wildcardmatching",
            "category_id": "dynamicprogramming",
            "problem_slug": "wildcard-matching",
            "subcategory_slug": "dp-on-strings",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_dponstrings",
            "problem_name": "Wildcard matching",
            "problem_rank": 9,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "dynamicprogramming_mcmdp",
        "category_name": "Dynamic Programming",
        "category_id": "dynamicprogramming",
        "subcategory_slug": "mcm-dp",
        "subcategory_name": "MCM DP",
        "subcategory_rank": 8,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_mcmdp_matrixchainmultiplication",
            "category_id": "dynamicprogramming",
            "problem_slug": "matrix-chain-multiplication",
            "subcategory_slug": "mcm-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_mcmdp",
            "problem_name": "Matrix chain multiplication",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_mcmdp_minimumcosttocutthestick",
            "category_id": "dynamicprogramming",
            "problem_slug": "minimum-cost-to-cut-the-stick",
            "subcategory_slug": "mcm-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_mcmdp",
            "problem_name": "Minimum cost to cut the stick",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_mcmdp_burstballoons",
            "category_id": "dynamicprogramming",
            "problem_slug": "burst-balloons",
            "subcategory_slug": "mcm-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_mcmdp",
            "problem_name": "Burst balloons",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "dynamicprogramming_dynamicprogramming_mcmdp_palindromepartitioningii",
            "category_id": "dynamicprogramming",
            "problem_slug": "palindrome-partitioning-ii-",
            "subcategory_slug": "mcm-dp",
            "category_slug": "dynamic-programming",
            "subcategory_id": "dynamicprogramming_mcmdp",
            "problem_name": "Palindrome partitioning II ",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "tries",
    "category_name": "Tries",
    "category_rank": 17,
    "category_slug": "tries",
    "subcategories": [
      {
        "subcategory_id": "tries_triessubc",
        "category_name": "Tries",
        "category_id": "tries",
        "subcategory_slug": "triessubc",
        "subcategory_name": "Theory",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "tries_tries_triessubc_trieimplementationandoperations",
            "category_id": "tries",
            "problem_slug": "trie-implementation-and-operations",
            "subcategory_slug": "triessubc",
            "category_slug": "tries",
            "subcategory_id": "tries_triessubc",
            "problem_name": "Trie Implementation and Operations",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "tries_tries_triessubc_trieimplementationandadvancedoperations",
            "category_id": "tries",
            "problem_slug": "trie-implementation-and-advanced-operations",
            "subcategory_slug": "triessubc",
            "category_slug": "tries",
            "subcategory_id": "tries_triessubc",
            "problem_name": "Trie Implementation and Advanced Operations",
            "problem_rank": 2,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "tries_problems",
        "category_name": "Tries",
        "category_id": "tries",
        "subcategory_slug": "problems",
        "subcategory_name": "Problems",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "tries_tries_problems_longestwordwithallprefixes",
            "category_id": "tries",
            "problem_slug": "longest-word-with-all-prefixes",
            "subcategory_slug": "problems",
            "category_slug": "tries",
            "subcategory_id": "tries_problems",
            "problem_name": "Longest word with all prefixes",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "tries_tries_problems_numberofdistinctsubstringsinastring",
            "category_id": "tries",
            "problem_slug": "number-of-distinct-substrings-in-a-string",
            "subcategory_slug": "problems",
            "category_slug": "tries",
            "subcategory_id": "tries_problems",
            "problem_name": "Number of distinct substrings in a string",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "tries_tries_problems_maximumxoroftwonumbersinanarray",
            "category_id": "tries",
            "problem_slug": "maximum-xor-of-two-numbers-in-an-array",
            "subcategory_slug": "problems",
            "category_slug": "tries",
            "subcategory_id": "tries_problems",
            "problem_name": "Maximum XOR of two numbers in an array",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "tries_tries_problems_maximumxorwithanelementfromanarray",
            "category_id": "tries",
            "problem_slug": "maximum-xor-with-an-element-from-an-array",
            "subcategory_slug": "problems",
            "category_slug": "tries",
            "subcategory_id": "tries_problems",
            "problem_name": "Maximum Xor with an element from an array",
            "problem_rank": 4,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "strings(advancedalgo)",
    "category_name": "Strings (Advanced Algo)",
    "category_rank": 18,
    "category_slug": "strings--advanced-algo",
    "subcategories": [
      {
        "subcategory_id": "strings(advancedalgo)_mediumproblems",
        "category_name": "Strings (Advanced Algo)",
        "category_id": "strings(advancedalgo)",
        "subcategory_slug": "medium-problems",
        "subcategory_name": "Medium Problems",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_mediumproblems_reverseeverywordinastring",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "reverse-every-word-in-a-string",
            "subcategory_slug": "medium-problems",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_mediumproblems",
            "problem_name": "Reverse every word in a string",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_mediumproblems_minimumnumberofbracketreversalstomakeanexpressionbalanced",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "minimum-number-of-bracket-reversals-to-make-an-expression-balanced",
            "subcategory_slug": "medium-problems",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_mediumproblems",
            "problem_name": "Minimum number of bracket reversals to make an expression balanced",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_mediumproblems_countandsay",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "count-and-say",
            "subcategory_slug": "medium-problems",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_mediumproblems",
            "problem_name": "Count and say",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      },
      {
        "subcategory_id": "strings(advancedalgo)_advancedproblems(lessasked)",
        "category_name": "Strings (Advanced Algo)",
        "category_id": "strings(advancedalgo)",
        "subcategory_slug": "advanced-problems-(less-asked)",
        "subcategory_name": "Advanced Problems (Less asked)",
        "subcategory_rank": 2,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_rabinkarpalgorithm",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "rabin-karp-algorithm",
            "subcategory_slug": "advanced-problems-(less-asked)",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_advancedproblems(lessasked)",
            "problem_name": "Rabin Karp Algorithm",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_zfunction",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "z-function",
            "subcategory_slug": "advanced-problems-(less-asked)",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_advancedproblems(lessasked)",
            "problem_name": "Z function",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_kmpalgorithm",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "kmp-algorithm-or-lps-array",
            "subcategory_slug": "advanced-problems-(less-asked)",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_advancedproblems(lessasked)",
            "problem_name": "KMP Algorithm or LPS array",
            "problem_rank": 3,
            "hasIDE": 1
          },
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_shortestpalindrome",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "shortest-palindrome",
            "subcategory_slug": "advanced-problems-(less-asked)",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_advancedproblems(lessasked)",
            "problem_name": "Shortest Palindrome",
            "problem_rank": 4,
            "hasIDE": 1
          },
          {
            "problem_id": "strings(advancedalgo)_strings(advancedalgo)_advancedproblems(lessasked)_longesthappyprefix",
            "category_id": "strings(advancedalgo)",
            "problem_slug": "longest-happy-prefix",
            "subcategory_slug": "advanced-problems-(less-asked)",
            "category_slug": "strings--advanced-algo",
            "subcategory_id": "strings(advancedalgo)_advancedproblems(lessasked)",
            "problem_name": "Longest happy prefix",
            "problem_rank": 5,
            "hasIDE": 1
          }
        ]
      }
    ]
  },
  {
    "category_id": "maths",
    "category_name": "Maths",
    "category_rank": 19,
    "category_slug": "maths",
    "subcategories": [
      {
        "subcategory_id": "maths_sieveoferatosthenes",
        "category_name": "Maths",
        "category_id": "maths",
        "subcategory_slug": "sieve-of-eratosthenes",
        "subcategory_name": "Sieve of Eratosthenes",
        "subcategory_rank": 1,
        "subcategory_type": "study",
        "problems": [
          {
            "problem_id": "maths_maths_sieveoferatosthenes_printallprimestilln",
            "category_id": "maths",
            "problem_slug": "print-all-primes-till-n",
            "subcategory_slug": "sieve-of-eratosthenes",
            "category_slug": "maths",
            "subcategory_id": "maths_sieveoferatosthenes",
            "problem_name": "Print all primes till N",
            "problem_rank": 1,
            "hasIDE": 1
          },
          {
            "problem_id": "maths_maths_sieveoferatosthenes_primefactorisationofanumber",
            "category_id": "maths",
            "problem_slug": "prime-factorisation-of-a-number",
            "subcategory_slug": "sieve-of-eratosthenes",
            "category_slug": "maths",
            "subcategory_id": "maths_sieveoferatosthenes",
            "problem_name": "Prime factorisation of a Number",
            "problem_rank": 2,
            "hasIDE": 1
          },
          {
            "problem_id": "maths_maths_sieveoferatosthenes_countprimesinrangeltor",
            "category_id": "maths",
            "problem_slug": "count-primes-in-range-l-to-r",
            "subcategory_slug": "sieve-of-eratosthenes",
            "category_slug": "maths",
            "subcategory_id": "maths_sieveoferatosthenes",
            "problem_name": "Count primes in range L to R",
            "problem_rank": 3,
            "hasIDE": 1
          }
        ]
      }
    ]
  }
]